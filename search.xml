<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Android手机多系统教程</title>
      <link href="/2018/05/12/Android%E6%89%8B%E6%9C%BA%E5%A4%9A%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/"/>
      <url>/2018/05/12/Android%E6%89%8B%E6%9C%BA%E5%A4%9A%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>其实在小米4之前的每一代小米手机都可以安装双系统，这是由于MIUI的频繁更新而设置的一种保护机制,不过之后就取消了,目前Android手机多系统教程,是通过软件<code>Dual Boot Patcher</code> 来实现的,顾名思义就是可以在一部手机上面安装多个基于UI,比如国内基于安卓系统的UI-<code>MIUI、Flyme、Mokee这些</code>，安卓系统使用的是Linux的内核，这个多系统只是借助了<strong><em>chroot</em></strong>而已.网上关于这款软件有很多教程，但是很多教程写的都不够详细，对新手不够友好，也没有做到详略得当，所以我就把我安装多系统的过程记录下来。</p><a id="more"></a><p><strong><em>名词释义</em></strong></p><ul><li><p>chroot<br>chroot命令用来在指定的根目录下运行指令。chroot，即<code>change root directory</code> （更改 root 目录）。在 linux 系统中，系统默认的目录结构都是以/，即是以根 (root) 开始的。而在使用<code>chroot</code> 之后，系统的目录结构将以指定的位置作为/位置。</p></li><li><p>UI<br>即<code>user interface</code> (用户界面)</p></li></ul><p>效果预览：</p><table><tr><br><td><img src="desktop.png" border="0"></td><br><td><img src="interface.png" border="0"></td><br><td><img src="interface_mokee.png" border="0"></td><br><td><img src="interface_miui.png" border="0"></td><br></tr></table><p><img src="desktop.png" alt="mokee"><br><img src="interface.png" alt="miui"><br><img src="interface_mokee.png" alt="mokee_app"><br><img src="interface_miui.png" alt="miui_app"></p><h3 id="用到工具"><a href="#用到工具" class="headerlink" title="用到工具"></a>用到工具</h3><p>记得老师总说，做题就像做菜一样，首先要把原料准备好，这里我们主要用到的工具有：</p><ul><li><p><a href="https://dbp.noobdev.io/" target="_blank" rel="noopener">Dual Boot Patcher</a> <a href="https://dbp.noobdev.io/files/9.3.0.r493.g32c14fd5/Android/DualBootPatcherAndroid-9.3.0.r493.g32c14fd5-snapshot.apk" target="_blank" rel="noopener">Android下载</a></p></li><li><p><a href="http://p5culcl8r.bkt.clouddn.com/bin.mt.plus-2.5.0-18042700-21048.apk" target="_blank" rel="noopener">MT工具箱</a></p></li><li><p><a href="">files</a></p></li></ul><h4 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h4><ul><li>获取root权限</li><li>解锁system分区</li><li>解密data分区</li></ul><h4 id="注意事项及常见问题"><a href="#注意事项及常见问题" class="headerlink" title="注意事项及常见问题"></a>注意事项及常见问题</h4><ul><li>刷入系统后，先不要重启，复制内部存储下的<code>multiboot</code>文件夹📁下的启动文件到root分区，注意是root分区，不是boot分区，这样做是为了保证当data未解密时仍然能够通过recovery刷入boot镜像切回主系统，路径：<code>/storage/emulated/0/multiboot/</code>下面的所有文件夹复制到根目录的root分区</li><li>解密<code>data</code>分区，使用twrp中的解密data，然后刷入supersu，防止data加密</li><li>刷入<code>recovery</code>，推荐刷入T W R P，使用一键刷入recovery工具包</li><li>处理刷机包，选择刷入分区，建议都安装在data分区</li><li>下载刷机包，使用MT工具箱文本编辑，删除基带验证。</li><li>带BL锁的，要先解BL锁。</li><li>刷入<code>Supersu</code>，获取ROOT权限，同时还能防止data再次加密</li><li>使用<code>syslock</code>解锁system分区，从而获取完整root权限，针对MIUI从官方下载root包获取的权限，如果使用Supersu获取的话可以忽略。</li><li>刷入位置：推荐data分区，其他位置一般刷入失败的概率比较大，填写ID时，根据个人喜好填写，仅仅只是为了区分系统安装的位置而已。</li><li>文件乱码，内部存储无读写权限：这种情况属于未解密data分区，可以在recovery中刷入你想启动的系统的boot.img文件，即可切回主系统。</li><li>解密<code>data</code>会清空所有数据，所以提前备份好重要数据，推荐使用小米云服务备份。</li><li>由于<code>8.x</code>系统分区结构改变，并且会自动加密data分区，dual boot patcher作者尚未更新，所以8.x系统大部分不能用作副系统。</li><li>为除<code>主系统</code>外的其他系统刷入Supersu以及xposed都需要处理，处理方式与刷入系统方式相同，同时安装位置要与待安装到的系统位置相同，即填写id标识与系统相同。</li><li>设置锁屏密码;刷入其他系统后，最多只能有一个系统设置锁屏密码，并且只有最后一次设置的密码能够解锁对应系统，其他系统均会出现密码错误。</li><li>密码错误，无法解密:此时只需要在TWRP自带的Terminal下面删除锁屏密码保存的文件即可，锁屏密码锁在路径，系统的相对路径(系统安装位置)假设为～，密码保存文件位于：<code>~/data/system/</code>，以主系统为例 <code>cd /data/system</code>,查看文件<code>ls</code>,其他后缀名为 <strong><em>key</em></strong>的就是要删除的文件,<code>rm *.key</code>同样的，因为密码错误无法进入系统也可以删除对应的密码保存文件。</li></ul><h3 id="刷机指南"><a href="#刷机指南" class="headerlink" title="刷机指南"></a>刷机指南</h3><h4 id="通过Recovery-卡刷"><a href="#通过Recovery-卡刷" class="headerlink" title="通过Recovery 卡刷"></a>通过<code>Recovery</code> 卡刷</h4><h4 id="通过Fastboot-线刷"><a href="#通过Fastboot-线刷" class="headerlink" title="通过Fastboot 线刷"></a>通过<code>Fastboot</code> 线刷</h4><p>（未完待续…）</p>]]></content>
      
      <categories>
          
          <category> 玩机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Dual Boot Patcher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx以及私有云搭建</title>
      <link href="/2018/04/28/Nginx%E4%BB%A5%E5%8F%8A%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/04/28/Nginx%E4%BB%A5%E5%8F%8A%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>平时没事经常去GitHub看看开源的项目，昨天看见一个下载<code>Youtube</code> 视频的项目，觉得很不错，国外网速快，4个G不到30s下好了，要是能VPS上面在线播放就好了，这不，Nginx就派上用场了，平时下载国外资源网速慢，可以先下载到服务器，再从服务器下载。回归正题，本文需要<code>LNMP</code> 环境。<br><a id="more"></a></p><h2 id="一键安装LNMP"><a href="#一键安装LNMP" class="headerlink" title="一键安装LNMP"></a>一键安装LNMP</h2><p>所谓的<strong><em>LNMP</em></strong>是指：</p><ul><li style="list-style: none"><input type="checkbox" checked> Linux系统</li><li style="list-style: none"><input type="checkbox" checked> Nginx</li><li style="list-style: none"><input type="checkbox" checked> mysql(数据库)</li><li style="list-style: none"><input type="checkbox" checked> Php</li></ul><p>下面使用一键安装脚本：<br>ssh连接VPS，使用<code>root</code> 登录主机：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft2.vpser.net/lnmp/lnmp1.4-full.tar.gz  <span class="comment">#下载lnmp完整包</span></span><br><span class="line">tar -xvf lnmp1.4-full.tar.gz      <span class="comment">#解压</span></span><br><span class="line"><span class="built_in">cd</span> lnmp1.4-full                   <span class="comment">#进入lnmp1.4-full文件夹</span></span><br><span class="line">chmod +x install.sh                        <span class="comment">#为安装脚本添加可执行权限，遇到确实执行权限，可以添加运行权限</span></span><br></pre></td></tr></table></figure></p><ul><li>安装<code>screen</code> （可选）<br>因为编译时间比较长，大概半个小时左右，如果不慎关闭终端，那么远程服务器的操作就会终止，这时候使用<code>screen</code> 来创建一个会话，这样即使断开本地终端与服务器的连接，安装操作也会继续进行，一般Linux预装了<strong><em>screen</em></strong><br>如果没有安装的话，可以通过<code>yum install screen</code> (centOS等),<code>apt-get install screen</code> (Ubuntu等)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -S lnmp          <span class="comment">#创建名为lnmp的对话窗口</span></span><br><span class="line">bash install.sh         <span class="comment">#执行安装脚本</span></span><br></pre></td></tr></table></figure><p>安装过程我就不细说了，按照提示操作就可以了。</p><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><ul><li>通过源码编译安装Nginx<br>通过源码编译安装<code>Nginx</code> 是为了能够使用<code>Nginx</code> 的一些模块，这里为了美化Nginx的目录浏览，会安装<code>Fancy Index module</code> ,<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">Nginx源码</a>.下面我以<code>version=    1.14.0</code> 为例;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.14.0.tar.gz      <span class="comment">#你也可以选择使用curl下载</span></span><br><span class="line">gunzip -c nginx-1.14.0.tar.gz | tar -xvf -         <span class="comment">#解压源码压缩包到当前目录</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/aperezdc/ngx-fancyindex.git ngx-fancyindex   <span class="comment">#需要安装git</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.0              <span class="comment">#进入目标文件夹</span></span><br><span class="line">./configure --user=www --group=www --prefix=/usr/<span class="built_in">local</span>/nginx \      <span class="comment">#每条命令都要回车</span></span><br><span class="line">--with-http_stub_status_module \ </span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_gzip_static_module \ </span><br><span class="line">--with-ipv6 \ </span><br><span class="line">--with-http_sub_module \</span><br><span class="line">--add-module=../ngx-fancyindex              <span class="comment">#添加Fancy Index module</span></span><br><span class="line">make &amp;&amp; sudo make install                   <span class="comment">#编译并安装</span></span><br></pre></td></tr></table></figure><p>安装好<code>Nginx</code> 之后我们需要简单设置一下来开启<code>目录浏览功能</code> 并启用<code>Fancy Index module</code> ,在<code>/usr/local/nginx/conf/nginx.conf</code> 中添加以下代码：</p><p>service字段中添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  fancyindex on;              <span class="comment"># Enable fancy indexes.</span></span><br><span class="line">  fancyindex_exact_size off;  <span class="comment"># Output human-readable file sizes.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>http字段中添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">autoindex on;</span><br><span class="line">include fancyindex.conf;</span><br></pre></td></tr></table></figure></p><p>接下来执行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/TheInsomniac/Nginx-Fancyindex-Theme.git /usr/<span class="built_in">local</span>/nginx/fancyindex</span><br></pre></td></tr></table></figure></p><p>效果预览：<a href="https://file.ourfor.top" target="_blank" rel="noopener">@-@</a></p><p>主题项目地址：</p><ul><li><a href="https://github.com/TheInsomniac/Nginx-Fancyindex-Theme.git" target="_blank" rel="noopener">TheInsomniac</a></li><li><a href="https://github.com/Naereen/Nginx-Fancyindex-Theme.git" target="_blank" rel="noopener">Naereen</a></li></ul><h2 id="安装Youtube-dl"><a href="#安装Youtube-dl" class="headerlink" title="安装Youtube-dl"></a>安装<code>Youtube-dl</code></h2><ul><li><a href="https://github.com/rg3/youtube-dl" target="_blank" rel="noopener">youtube-dl</a></li></ul><p>GitHub上面有详细的使用教程；按照上面的介绍，你可以在<code>Terminal</code> 中键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br><span class="line">sudo chmod a+rx /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br></pre></td></tr></table></figure><p>嗯，就这样就安装好了，接下来你就可以去油管找你想下载的视频了。我就不详细介绍命令的用法了。</p><p><img src="http://p5culcl8r.bkt.clouddn.com/youtube-dl.png" alt="youtube-dl"></p><p>分辨率最高的视频是不包含音频的，所以还要下载音频，最后用<code>ffmpeg</code> 来将音频文件和视频文件合成新的视频文件。</p><p><img src="http://p5culcl8r.bkt.clouddn.com/ffmpeg.png" alt="ffmpeg"></p><h2 id="ownCloud"><a href="#ownCloud" class="headerlink" title="ownCloud"></a>ownCloud</h2><ul><li><a href="https://owncloud.org/" target="_blank" rel="noopener">ownCloud</a></li></ul><p>首先你得有一个域名，大部分域名还是很便宜的，像阿里云、腾讯云的新用户首年1元的域名还是很多的<br>添加一个虚拟主机目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br><span class="line">cloud.ourfor.top             <span class="comment">#你的域名，同时将域名dns解析到服务器ip</span></span><br></pre></td></tr></table></figure></p><p>进入网站更目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/cloud.ourfor.top</span><br><span class="line">curl -L https://download.owncloud.org/download/community/owncloud-latest.zip -o oc.zip   <span class="comment">#下载ownCloud源码，并重命名为oc.zip</span></span><br><span class="line">unzip oc.zip    <span class="comment">#解压源码压缩包</span></span><br><span class="line">cp -R owncloud/* .      <span class="comment">#递归拷贝文件到网站根目录</span></span><br></pre></td></tr></table></figure></p><blockquote><p>注意：ownCloud需要Php版本高于5.6.0，如果你的PHP版本比较低可以在lnmp文件夹下面执行<code>upgrade.sh</code> 脚本升级Php</p></blockquote><p>接下来打开你绑定的域名，设置一下就好了。</p><p>（未完待续）</p>]]></content>
      
      <categories>
          
          <category> 私有云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> ownCloud </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>进制转化</title>
      <link href="/2018/04/21/%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96/"/>
      <url>/2018/04/21/%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>上个星期学了栈和队列，正好下个星期的上机作业是“进制转换”,一般进制转换是通过短除法（除k取余法）来转化，除完之后由下往上将这些数组合在一起,这不这好和栈的特点一样吗？嗯，顿时我的手就有点痒了，于是中午就敲了敲，下午Debug了一下，感觉这问题要考虑全面有点难啊，写个简单的得了。这大于10进制的还涉及字母，还是简单的考虑吧。<br><a id="more"></a></p><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><ul><li>首先你得把用户输入的数转化为10进制(暂时不要考虑输入大于10进制)</li><li>将十进制的数转化为其他进制(同样只考虑不大于10进制的)</li></ul><p>@timeline{</p><h5 id="输入数-eg-1998-类型为int，以及对应的进制k"><a href="#输入数-eg-1998-类型为int，以及对应的进制k" class="headerlink" title="输入数(eg:1998),类型为int，以及对应的进制k"></a>输入数(eg:1998),类型为<strong><em>int</em></strong>，以及对应的进制<code>k</code></h5><p>@item{</p><h6 id="将组成这个数的这些数字分开，1-9-9-8"><a href="#将组成这个数的这些数字分开，1-9-9-8" class="headerlink" title="将组成这个数的这些数字分开，1 9 9 8"></a>将组成这个数的这些数字分开，1 9 9 8</h6><p>这里并不能用<code>char</code> 来分开它们，因为<code>数据类型</code> 不仅仅包含一个取值集合，同时也包含了定义在这个取值集合上的一组 <code>操作</code> ,可以通过<code>除10</code> 取余来分离</p><p>}</p><p>@item{</p><h6 id="转化为10进制"><a href="#转化为10进制" class="headerlink" title="转化为10进制"></a>转化为10进制</h6><p>将分离出来的数字依次与对应的<code>k</code> 的幂相乘，最后求和</p><p>}</p><p>@item{</p><h6 id="除m取余，转化为m进制"><a href="#除m取余，转化为m进制" class="headerlink" title="除m取余，转化为m进制"></a>除m取余，转化为m进制</h6><p>这里使用<code>%</code> 求模，<code>int</code> 强制类型转化求商</p><p>}</p><h5 id="输出计算后的结果"><a href="#输出计算后的结果" class="headerlink" title="输出计算后的结果"></a>输出计算后的结果</h5><p>}</p><h2 id="栈的实现"><a href="#栈的实现" class="headerlink" title="栈的实现"></a>栈的实现</h2><h2 id="k进制转化为10进制-k-lt-10"><a href="#k进制转化为10进制-k-lt-10" class="headerlink" title="k进制转化为10进制(k&lt;=10)"></a>k进制转化为10进制(k&lt;=10)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------其他进制转化为十进制--------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SwitchNum_10</span><span class="params">(Stack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//输入的数、对应进制、待转化进制</span></span><br><span class="line"><span class="keyword">int</span> data,n,i,num,num_input;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入待转化的数："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; data;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"它为几进制："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num_input;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转化为10进制</span></span><br><span class="line">num=<span class="number">10</span>;</span><br><span class="line">InitStack(S);</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录有多少个数字</span></span><br><span class="line">    <span class="keyword">int</span> record_num_total=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//除10取余</span></span><br><span class="line"><span class="keyword">for</span>(i=data;i!=<span class="number">0</span>;data=i)</span><br><span class="line">&#123;</span><br><span class="line">i=data / num; <span class="comment">//取商</span></span><br><span class="line">j=data % num;    <span class="comment">//取余</span></span><br><span class="line">        record_num_total++;</span><br><span class="line">Pop(S,j);</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//入栈</span></span><br><span class="line"></span><br><span class="line">SElemType *r=S.base + <span class="number">1</span>;</span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转化为10进制</span></span><br><span class="line"><span class="keyword">for</span>(data=<span class="number">0</span>;r!=S.top;r++)</span><br><span class="line">&#123;</span><br><span class="line">        data=data + (*r) * <span class="built_in">pow</span>(num_input,n);</span><br><span class="line">        n++;</span><br><span class="line">&#125;</span><br><span class="line">    data=data + (*r) * <span class="built_in">pow</span>(num_input,n);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; data;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回10进制数</span></span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10进制转化为m进制-m-lt-10"><a href="#10进制转化为m进制-m-lt-10" class="headerlink" title="10进制转化为m进制(m&lt;=10)"></a>10进制转化为m进制(m&lt;=10)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------十进制转化为其他进制--------------------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">SwitchNum</span><span class="params">(Stack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> data,i,num;</span><br><span class="line"><span class="comment">//cout &lt;&lt; "输入待转化的数：";</span></span><br><span class="line">data=SwitchNum_10(S);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想把它转化为几进制："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">InitStack(S);</span><br><span class="line"></span><br><span class="line"><span class="comment">//除k取余</span></span><br><span class="line"><span class="keyword">for</span>(i=data;i!=<span class="number">0</span>;data=i)</span><br><span class="line">&#123;</span><br><span class="line">i=data / num;</span><br><span class="line">j=data % num;</span><br><span class="line">Pop(S,j);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"转化为"</span> &lt;&lt; num &lt;&lt; <span class="string">"进制后为：\n"</span>;</span><br><span class="line">    <span class="comment">//出栈后即为k进制</span></span><br><span class="line">Push(S);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(未完待续。。。。)</p><p>代码已经同步到仓库：<a href="https://github.com/ourfor/My-C-Learning/blob/master/C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9C%BA/Stack.cpp" target="_blank" rel="noopener">Stuck</a></p><p><img src="http://p5culcl8r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-22%20%E4%B8%8A%E5%8D%8812.12.30.png" alt="花了我一个小时才配置好powerline&amp;airline"></p><p>又到了毕业季🎓，回首高中的日子，满满的回忆。</p><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'http://p5culcl8r.bkt.clouddn.com/%E5%A5%BD%E5%A6%B9%E5%A6%B9%E4%B9%90%E9%98%9F-%E4%B8%8D%E8%AF%B4%E5%86%8D%E8%A7%81.mp3',        poster: 'http://p5culcl8r.bkt.clouddn.com/%E5%A5%BD%E5%A6%B9%E5%A6%B9%E4%B9%90%E9%98%9F.jpg',        name: '不说再见',        artist: '好妹妹乐队'      }    ]  })</script>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MIUI Theme</title>
      <link href="/2018/04/07/Theme/"/>
      <url>/2018/04/07/Theme/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>最近闲的没事，改了改手机上的主题。虽然主题商店里面有不少精美的主题的，但是这些主题都不够完美，有些图标精致，有些锁屏强大，所以总能勾起修改的欲望。接触主题制作这么久了，<strong><em>主题商店</em></strong>还仅仅上架过一款主题，说实话我PS弄得一般般，所以这款唯一上架的主题也仅仅分成了10多块大洋，设计不太会，代码还是懂一点的，主题描述文件是遵循<code>xml</code>语法的，所以就借用其他主题的素材，修改部分代码，东拼西凑了一下，最后效果还不错。（仅限自用，请勿上传到主题商店）</p><a id="more"></a><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><p><img src="http://p5culcl8r.bkt.clouddn.com/autojump_0.png" alt="主屏"><br>这个<code>AT&amp;T</code>是在手机的<code>设置-状态栏-运营商</code>这里修改。而这个<code>Love you %d days</code>是修改了主题的状态栏描述文件，这个数字就是电池实时电量的百分比。</p><p><img src="http://p5culcl8r.bkt.clouddn.com/autojump_1.png" alt="Time"></p><p>时间设置成<code>星期+日期|时间</code>也在主题的描述文件里面设置的，图标则是使用了<strong><em>H2SO</em></strong>的图标。</p><p><img src="http://p5culcl8r.bkt.clouddn.com/autojump_2.png" alt="Tips"></p><h3 id="时间居中"><a href="#时间居中" class="headerlink" title="时间居中"></a>时间居中</h3><p>状态栏时间居中是在解锁System后使用<code>MiUI Statusbar Pro</code>设置的，当然你也可以反编译<code>system/priv-app/miuisystemui</code>里的<code>miuisystemui.apk</code>,这同样需要<em>root</em>权限。</p><p>相关教程<a href="http://p5culcl8r.bkt.clouddn.com/%E7%8A%B6%E6%80%81%E6%A0%8F%E5%B8%83%E5%B1%80%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E4%BF%AE%E8%AE%A2%E7%89%88%EF%BC%89.pdf" target="_blank" rel="noopener">下载</a></p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p><a href="http://p5culcl8r.bkt.clouddn.com/H2OS.mtz" target="_blank" rel="noopener">主题下载_v1.0</a>(仅限自用，请勿上传到主题商店)<br><a href="http://p5culcl8r.bkt.clouddn.com/H2OS_2.0.mtz" target="_blank" rel="noopener">v2.0</a></p><p><a href="http://p5culcl8r.bkt.clouddn.com/com.mixapplications.miuithemeeditor.apk" target="_blank" rel="noopener">MIUI Theme Editor</a></p><p>我使用的是星空的官改rom，由于这手机平时用得着，所以就退出体验版内测了，估计大部分人用的是官方的开发版或者稳定版，没更新过系统的话，用<code>MIUI Theme Editor</code>（不需要root）注入主题，就可以在主题里面应用，只不过这个软件第一次使用需要下载大概60m的数据文件，需要翻墙下载。</p><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"theme":"#FADFA3","loop":true,"video":{"url":"http://file.ourfor.top/youtube/Army1.mp4","pic":"http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
        <tags>
            
            <tag> Theme </tag>
            
            <tag> MIUI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据结构-线性表</title>
      <link href="/2018/03/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2018/03/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>又到周末了，第一天上机结果IDE都没有找到，感觉是不是自己命令行用习惯了，基本的编译器都不会用了，还好在下机前5分钟找到了IDE，每周总要做做笔记啥的，这周主要学了线性表，感觉线性表这东西老师讲的很清楚了，保持思考还是把它写下来吧，或许几个月以后我对它的理解又更进一步了。总之，这次上机的内容还算简单。<br><a id="more"></a><br>感觉这<strong><em>《数据结构》</em></strong>这门课还是挺有意思的，上课的时候不仅分析算法还补充下语法，我呢平时基本不做预习这东西，可能是以前高中自学高数留下来的坏毛病吧，不过老师上课讲的东西我的脑子里面记得还是很清楚的，回头看看书感觉更好了。我在枕头旁边放了两本数据结构，基本没翻，要是睡觉的时候会自动扩散到脑子里面就好了。平时没事会把代码输电脑里面进来，最后同步到仓库。其实我更喜欢在纸上写好代码之后再输进电脑，不知道为什么老是有这种感觉感觉只有一打开电脑又得浪费不少时间。</p><details><summary>我在GitHub上面的主页</summary><br><br><a href="https://github.com/ourfor" target="_blank" rel="noopener">Ourfor</a><br><a href="https://github.com/ourfor/My-C-Learning" target="_blank" rel="noopener">我的C/C++学习</a><br></details><h1 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h1><p>有必要弄清以下几个概念：</p><ul><li>线性表</li><li>顺序表</li><li>链表</li></ul><details><summary>线性表</summary><br><br>目前我是这样理解的，线性表之所以叫线性表就是因为表中的数据元素之间存在一对一的关系，这就好比<strong><em>离散数学</em></strong>里面讲的序偶，除了表头元素和表尾元素外表中每个元素都有唯一的一个直接前驱和直接后继，这样就使得这些元素在表中元素的位置唯一确定，同时这个表就有了逻辑顺序，满足这种特性有数组、字串之类的。<br></details><p>线性表根据存储方式不同可以分为<code>顺序表</code>和<code>链表</code>，其中以顺式存储的线性表叫做顺序表，以链式存储的线性表叫做链表。这两种表有各自的优缺点：</p><table><thead><tr><th style="text-align:center">类型（Type）</th><th style="text-align:center">优点（Advantages）</th><th style="text-align:center">缺点（Disadvantages）</th></tr></thead><tbody><tr><td style="text-align:center">线性表（Sqlist）</td><td style="text-align:center">可对表中元素随机存取</td><td style="text-align:center">表中的元素个数必须是确定的，虽然可用增加空间，但是初始化时还是会占用一定的空间，删除和插入元素比较复杂</td></tr><tr><td style="text-align:center">链表（Linklist）</td><td style="text-align:center">可用按照需要临时分配空间，删除与插入元素比较简单</td><td style="text-align:center">无法对表中元素随机存取，查找某个位置的元素也比较复杂。</td></tr></tbody></table><blockquote><p>预定义状态代码.</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    OK      1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    TRUE    1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    ERROR   0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    FALSE   0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    INFEASIBLE    -1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    OVERFLOW      -2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> ElemType;</span><br></pre></td></tr></table></figure><h2 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h2><ul><li>顺式存储线性表的建立、初始化、元素的插入、查找、删除以及销毁。<h3 id="建立以及初始化"><a href="#建立以及初始化" class="headerlink" title="建立以及初始化"></a>建立以及初始化</h3>首先，该如何实现顺序表这种数据类型？使用结构体定义顺序表时需要定义哪些成员？顺序表中除了元素还有元素的位置顺序（通过物理相邻来反映逻辑顺序），同时还需要对顺序表分配空间。定义结构体<code>Sqlist</code>，它包含三个成员，基地址elem，和数组相同；当前顺序表的元素个数用length来表示，顺序表可以容纳的元素的大小可以用listsize来表示；也就是说只需要一个结构体Sqlist变量就可以表示顺序表，那么顺序表中的元素应该存放在哪个位置呢？通常我们使用数组来存放同一数据类型的多个数据，C编译系统在编译数组的时候将数组名作为该数组的首地址。<br>同样的在顺序表中，我们将数据存放在基地址elem后面，那么就要求elem的地址与length的地址之间有足够的空间来存放数据。因此，顺序表的结构体可以这样定义：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">ElemType *elem;      <span class="comment">//结构体的基地址</span></span><br><span class="line"><span class="keyword">int</span> length;          <span class="comment">//顺序表中实际存放的元素个数</span></span><br><span class="line"><span class="keyword">int</span> listsize;        <span class="comment">//顺序表中能够存放的元素个数</span></span><br><span class="line">&#125;Sqlist;<span class="comment">//结构体名</span></span><br></pre></td></tr></table></figure><hr><hr><hr><details><summary>前方高能</summary><br><br>最近刷抖音小视频刷到几首好听的歌<br></details><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'http://p5culcl8r.bkt.clouddn.com/%E7%83%9F%E6%8A%8A%E5%84%BF%E4%B9%90%E9%98%9F-%E7%BA%B8%E7%9F%AD%E6%83%85%E9%95%BF.flac',        poster: 'http://p5culcl8r.bkt.clouddn.com/%E7%BA%B8%E7%9F%AD%E6%83%85%E9%95%BF.jpg',        name: '    纸短情长',        artist: '烟把儿乐队',      },      {        src: 'http://p5culcl8r.bkt.clouddn.com/%E6%9E%97%E4%BF%8A%E6%9D%B0-%E9%86%89%E8%B5%A4%E5%A3%81.flac',        poster: 'http://p5culcl8r.bkt.clouddn.com/nice.jpg',        name: '醉赤壁',        artist: '林俊杰',      },      {        src: 'http://p5culcl8r.bkt.clouddn.com/%E5%B9%BF%E4%B8%9C%E9%9B%A8%E7%A5%9E-%E5%B9%BF%E4%B8%9C%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B.mp3',        poster: 'http://p5culcl8r.bkt.clouddn.com/nice.jpg',        name: '广东爱情故事',        artist: '广东雨神',      },      {        src: 'http://p5culcl8r.bkt.clouddn.com/%E5%8D%97%E5%AE%AB%E5%98%89%E9%AA%8F,%E5%A7%9C%E7%8E%89%E9%98%B3-%E5%9B%9E%E5%BF%86%E6%80%BB%E6%83%B3%E5%93%AD.flac',        poster: 'http://p5culcl8r.bkt.clouddn.com/nice.jpg',        name: '回忆总想哭',        artist: '南宫嘉骏,姜玉阳',      }         ]  })</script><p><img src="http://p5culcl8r.bkt.clouddn.com/g++_-v.png" alt="gcc/g++"></p><p>这是我所使用的编译器版本，如果遇到<code>malloc</code>出错，可以在预处理指令中加上<code>#include&lt;stdlib.h&gt;</code></p><p>顺序表基本操作</p><ul><li>初始化</li><li>输入、输出、查找</li><li>插入、删除</li><li>就地逆置</li></ul><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------线性表初始量-------------------</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_ADD_SIZE 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------初始化线性表-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(Sqlist &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//构造一个空的线性表L</span></span><br><span class="line">T.elem=(ElemType *)<span class="built_in">malloc</span>(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));            </span><br><span class="line"><span class="keyword">if</span>(!T.elem) <span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">T.length=<span class="number">0</span>;</span><br><span class="line">T.listsize=LIST_INIT_SIZE;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"线性表初始化成功！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;<span class="comment">//InitList</span></span><br></pre></td></tr></table></figure><h3 id="输入、输出、查找"><a href="#输入、输出、查找" class="headerlink" title="输入、输出、查找"></a>输入、输出、查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------线性表数据的输出-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DisplayList</span><span class="params">(Sqlist T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">ElemType * q=T.elem;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=T.length<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">q=T.elem+i;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; * q &lt;&lt; <span class="string">" "</span> ;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------线性表数据输入-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InputList</span><span class="params">(Sqlist &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"线性表中有多少个元素："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T.length;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入线性表中的各个元素："</span>;</span><br><span class="line">ElemType * p;</span><br><span class="line">p=T.elem;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=T.length<span class="number">-1</span>;i++,p++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; * p;</span><br><span class="line">&#125;</span><br><span class="line">DisplayList(T);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------查找-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">LocalList</span><span class="params">(Sqlist &amp;T,ElemType find_elem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ElemType *p;</span><br><span class="line"><span class="keyword">int</span> elem_num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(p=T.elem;p&lt;T.elem + T.length - <span class="number">1</span>;p++)</span><br><span class="line">&#123;</span><br><span class="line">num+=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(*p==find_elem)&#123;</span><br><span class="line">elem_num=num;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"元素"</span> &lt;&lt; find_elem &lt;&lt; <span class="string">"在线性表中位于第"</span> &lt;&lt; elem_num &lt;&lt; <span class="string">"个位置"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(elem_num==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"表中不存在元素"</span> &lt;&lt; find_elem;</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入、删除"><a href="#插入、删除" class="headerlink" title="插入、删除"></a>插入、删除</h3><blockquote><p>插入与删除的基本思路<br>顺序表插入元素主要操作应该是从输入流中获取用户输入的元素位置（插入位置）以及元素，插入位置后面的元素都要后移，如果空间不够，还应该重新申请空间，基本的算法应该是这样：</p></blockquote><ul><li>判断用户输入的插入位置是否正确，即参数合法性的问题</li><li>检查顺序表中是否还有足够的空间让用户插入元素，如果不够还得重新向系统申请空间</li><li>插入元素的位置确定后，应从表尾元素开始直到插入位置原来的元素，每个元素后移一个单位，插入完成后，顺序表中表示表中元素个数的 length + 1 ，自此插入操作完成，最后还应将表中元素逐个输出，便于后续调试和测试。</li></ul><blockquote><p>删除的思路与插入有所不同，首先你不需要考虑空间，正常的删除应该是输入待删除的位置，将删除的元素保存下来，从删除位置后的第一个元素开始逐个前移这样就自然完成了删除操作，最后 length - 1 。同时将表中元素逐个输出，以及删除的元素。</p></blockquote><ul><li>判断用户输入的位置是否合法</li><li>从删除位置后的第一个元素开始逐个前移，完成后更改成员<strong><em>length</em></strong>的值</li><li>输出现在表中的元素以及删除的元素</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------线性表元素的插入-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InsertList</span><span class="params">(Sqlist &amp;T,<span class="keyword">int</span> i,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//在第i个元素之前插入，使其成为第i个元素，判断插入位置i的合法性</span></span><br><span class="line"><span class="comment">//如果空间不够，重新分配空间</span></span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;T.length+<span class="number">1</span>) <span class="built_in">exit</span>(ERROR);</span><br><span class="line"><span class="keyword">if</span>(T.length&gt;=T.listsize) </span><br><span class="line">&#123;</span><br><span class="line">ElemType * newbase=(ElemType *)<span class="built_in">malloc</span>((LIST_INIT_SIZE+LIST_ADD_SIZE)*<span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">T.elem=newbase;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!T.elem) <span class="keyword">return</span> ERROR;             <span class="comment">//分配失败</span></span><br><span class="line"><span class="comment">//i后面的元素后移</span></span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line">ElemType * p=T.elem;</span><br><span class="line"><span class="keyword">for</span>(j=T.length - <span class="number">1</span>;j&gt;=i - <span class="number">1</span>;j--) *(p + j + <span class="number">1</span>)=*(p + j);</span><br><span class="line">*(T.elem + i - <span class="number">1</span>)=e;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"已将第"</span> &lt;&lt; i &lt;&lt; <span class="string">"个位置插入元素"</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">T.length=T.length + <span class="number">1</span>;</span><br><span class="line">DisplayList(T);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------线性表元素的删除-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DeleteList</span><span class="params">(Sqlist &amp;T,<span class="keyword">int</span> i,ElemType &amp;f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//删除位置的取值范围1&lt;=i&lt;=T.length</span></span><br><span class="line"><span class="comment">//删除第i个元素，其他元素往前移</span></span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;T.length) <span class="built_in">exit</span>(ERROR);</span><br><span class="line">ElemType *p=T.elem + i;</span><br><span class="line">f=*(p - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=T.length;*(p - <span class="number">2</span>)=*(p - <span class="number">1</span>),j++)</span><br><span class="line">p++;</span><br><span class="line">T.length=T.length<span class="number">-1</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"删除的元素为"</span> &lt;&lt; f &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">DisplayList(T);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部<a href="https://github.com/ourfor/My-C-Learning/blob/master/C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9C%BA/SqList.cpp" target="_blank" rel="noopener">代码</a></p><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><p>链表与顺序表不同</p><p>链表的定义：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------定义结构体-------------------------</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode;</span><br><span class="line"></span><br><span class="line">LNode *head;</span><br></pre></td></tr></table></figure><ul><li>初始化</li><li>输入、输出、查找</li><li>插入、删除</li><li>就地逆置</li></ul><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------初始化链表-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">head=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct LNode));</span><br><span class="line">head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入、输出、查找-1"><a href="#输入、输出、查找-1" class="headerlink" title="输入、输出、查找"></a>输入、输出、查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------输入链表-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InputList</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p,*r;</span><br><span class="line">p=r=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct LNode));</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入链表中的元素："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; p-&gt;data;</span><br><span class="line"><span class="keyword">char</span> stop;</span><br><span class="line">stop=<span class="built_in">cin</span>.get();</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(stop!=<span class="string">'\n'</span>)</span><br><span class="line">&#123;</span><br><span class="line">n=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)head-&gt;next=p;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">r=p;</span><br><span class="line">p=(struct LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct LNode));</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; p-&gt;data;</span><br><span class="line">stop=<span class="built_in">cin</span>.get();</span><br><span class="line">r-&gt;next=p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------输出链表-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DisplayList</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p;</span><br><span class="line">p=head-&gt;next;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;<span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------查找链表元素-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">LocateList</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想查找链表中的哪个元素："</span>;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e;</span><br><span class="line">LNode *p;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(p=head-&gt;next;p-&gt;data!=e&amp;&amp;p-&gt;next!=<span class="literal">NULL</span>;p=p-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line">n=n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;data!=e&amp;&amp;p-&gt;next==<span class="literal">NULL</span>) &#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"链表中不存在元素"</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;<span class="keyword">return</span> FALSE;&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;data==e) &#123;n=n+<span class="number">1</span>;<span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="string">"是链表中的第"</span> &lt;&lt; n &lt;&lt; <span class="string">"个元素"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="string">"是链表中的第"</span> &lt;&lt; n &lt;&lt; <span class="string">"个元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入、删除-1"><a href="#插入、删除-1" class="headerlink" title="插入、删除"></a>插入、删除</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------链表元素的插入-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InsertLNode</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想将元素插入到链表的哪个位置："</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; i;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"插入位置不对，请输入有效的插入位置："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"插入什么元素："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e;</span><br><span class="line">LNode *p=head-&gt;next;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">2</span>;n&lt;=i<span class="number">-1</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">LNode *r;</span><br><span class="line">r=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">r-&gt;data=e;</span><br><span class="line">r-&gt;next=p-&gt;next;</span><br><span class="line">p-&gt;next=r;</span><br><span class="line">DisplayList(head);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------链表元素的删除-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DeleteLNode</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(head-&gt;next==<span class="literal">NULL</span>) &#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"链表为空"</span> &lt;&lt; <span class="built_in">endl</span>;<span class="keyword">return</span> ERROR;&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想删除哪个元素："</span>;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e;</span><br><span class="line">LNode *p,*r;</span><br><span class="line"><span class="keyword">for</span>(p=head;p-&gt;data!=e&amp;&amp;p-&gt;next!=<span class="literal">NULL</span>;)</span><br><span class="line">&#123;</span><br><span class="line">                r=p;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;data==e)</span><br><span class="line">&#123;</span><br><span class="line">r-&gt;next=(p-&gt;next);</span><br><span class="line">                DisplayList(head);</span><br><span class="line">                <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;next==<span class="literal">NULL</span>)&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"不存在要删除的元素"</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;<span class="keyword">return</span> ERROR;&#125;</span><br><span class="line">r-&gt;next=p-&gt;next;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"已将元素删除"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">DisplayList(head);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="就地逆置"><a href="#就地逆置" class="headerlink" title="就地逆置"></a>就地逆置</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------链表就地逆置-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">UnsLinklist</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p,*r,*first=head-&gt;next;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"将链表就地转置为：\n"</span>;</span><br><span class="line"><span class="keyword">for</span>(p=head-&gt;next;p-&gt;next!=<span class="literal">NULL</span>;)</span><br><span class="line">&#123;</span><br><span class="line">r=p-&gt;next;</span><br><span class="line">p-&gt;next=head-&gt;next;</span><br><span class="line">head-&gt;next=p;</span><br><span class="line">p=r;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;next=head-&gt;next;</span><br><span class="line">head-&gt;next=p;</span><br><span class="line">first-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">DisplayList(head);</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部<a href="https://github.com/ourfor/My-C-Learning/blob/master/C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9C%BA/LinkList.cpp" target="_blank" rel="noopener">代码</a></p><blockquote><p>代码已经全部同步到<a href="https://github.com/ourfor/My-C-Learning" target="_blank" rel="noopener">GitHub-ourfor</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>编辑器Sublime Text 3</title>
      <link href="/2018/03/24/3/"/>
      <url>/2018/03/24/3/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>之前去百度找了下IDE(集成开发环境),安装了几款软件,发现这些软件不仅交互界面有待改善,而且体积巨大,自我学习计算机以来,我安装一款IDE到卸载不到1天，感觉这些开发环境比较臃肿，很多功能目前我也用不上，目前我用文本编辑器+gcc（g++）在Terminal下面compile源文件。我使用得比较多的文本编辑器有<code>Nodepad++</code> 、<code>vim</code> 、<code>nano</code> 、<code>Sulime Text 3</code>,其中<strong><em>vim</em></strong>和<strong><em>nano</em></strong>主要在Terminal下面使用,而Nodepad++仅支持Windows平台,而<strong><em>Sublime Text 3</em></strong>支持所有主流平台，虽然它不是免费的，但它也不强制用户付费。当然你也可以使用别人提供的激活码。之所以推荐Sublime Text 3是因为它不仅体积小而且功能强大，同时有不少人制作精美炫酷的主题。配置好主题，这软件值得一试。<br><a id="more"></a></p><h1 id="下载安装Sublime-Text-3"><a href="#下载安装Sublime-Text-3" class="headerlink" title="下载安装Sublime Text 3"></a>下载安装Sublime Text 3</h1><p><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text 3</a>  </p><p>可能会由于墙的原因，下载速度比较慢，这里我提供<code>Sublime Text 3 (Build 3143)</code>的安装包：</p><ul><li><a href="http://ozkg680jm.bkt.clouddn.com/Sublime%20Text%20Build%203143%20%281%29.dmg" target="_blank" rel="noopener">DOWNLOAD FOR MAC</a></li><li><a href="http://ozkg680jm.bkt.clouddn.com/Sublime%20Text%20Build%203143%20x64%20Setup.exe" target="_blank" rel="noopener">DOWNLOAD FOR WINDOWS</a></li><li><a href="http://ozkg680jm.bkt.clouddn.com/sublime_text_3_build_3143_x64.tar.bz2" target="_blank" rel="noopener">DOWNLOAD FOR LINUX</a></li></ul><blockquote><p>linux就直接用命令安装就好了，不必使用安装包</p></blockquote><blockquote><p>Node:个人比较喜欢英文界面，如果你更习惯使用中文，可以自行百度下载汉化包。</p></blockquote><h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>下面是这两个主题在<strong><em>GitHub</em></strong>上面的项目地址，有时间可以关注一下。<code>stars</code>的人多了，作者才会有更新的动力。</p><ul><li><a href="https://github.com/ihodev/a-file-icon" target="_blank" rel="noopener">A File Icon</a></li><li><a href="https://github.com/equinusocio/material-theme" target="_blank" rel="noopener">Material Theme</a></li></ul><p>项目地址上面提供了几种安装的方法，我这里提供一种简单的方法。</p><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>在菜单选项卡依次点开<code>Tools</code>-<code>Install Package</code>,过不了多久就安装好了<strong><em>Package Control</em></strong></p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>Type<code>Package Control: Install Package</code> ,它会自动安装,再输入需要安装的主题<code>A File Icon</code></p><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>首先安装<code>A File Icon</code>再安装<code>Material Theme</code>,安装好以后找到<code>Preferences &gt; Packages Settings</code>,里面选择<code>Material Theme &gt; Activate</code></p><p>主题的相关设置,这个你懂的吧。</p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-24%20%E4%B8%8B%E5%8D%881.07.10.png" alt="Sublime Text 3"></p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8B%E5%8D%8811.25.00.png" alt="@-@"></p><p><strong><em>激活码(可以不用，因为不强制用户购买)</em></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">—– BEGIN LICENSE —–</span><br><span class="line">Country Rebel</span><br><span class="line">Single User License</span><br><span class="line">EA7E-993095</span><br><span class="line">19176BCE 3FF86EA0 3CE86508 6BE4DCA7</span><br><span class="line">9F74D761 4D0CAD8B E4033008 43FC73F3</span><br><span class="line">1C01F6DD C4829BE9 E7830578 A4823ADC</span><br><span class="line">61B224F1 DC93C458 ABAAAE0F 925C32D4</span><br><span class="line">04A83C36 813FF6C8 9877942C 4418F99C</span><br><span class="line">2F15E5B8 544EDB80 D9A86985 4CBBA6A8</span><br><span class="line">998DE3E4 7FB33E15 6CD30357 6DC96CEA</span><br><span class="line">ECB1BC4E D8010D5A 77BA86C8 BA7F76CC</span><br><span class="line">—— END LICENSE ——</span><br></pre></td></tr></table></figure><p><a href="http://ozkg680jm.bkt.clouddn.com/Sublime%20Text%203.zip" target="_blank" rel="noopener">Windows免装懒人版</a></p><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: false,showlrc: 0,music: {title: "阿刁 (Live)",author: "张韶涵",url: "http://ozkg680jm.bkt.clouddn.com/%E5%BC%A0%E9%9F%B6%E6%B6%B5-%E9%98%BF%E5%88%81%20%28Live%29.flac",pic: "https://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike272%2C5%2C5%2C272%2C90/sign=6ed5142a95510fb36c147fc5b85aa3f0/8326cffc1e178a8231192533fd03738da977e878.jpg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script> ]]></content>
      
      <categories>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime Text 3 </tag>
            
            <tag> Theme </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Accelerate</title>
      <link href="/2018/03/10/Accelerate/"/>
      <url>/2018/03/10/Accelerate/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><table class="table"><br>    <tr><br>        <th>节次/周次</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>        <th>星期四</th><br>        <th>星期五</th><br>    </tr><br>    <tr><br>        <td>第一节</td><br>        <td rowspan="2">数据结构上机</td><br>        <td></td><br>        <td rowspan="2">高等数学（西205)</td><br>        <td rowspan="2">高等数学（西206)</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第二节</td><br>        <td rowspan="3">C++（西205）</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第三节</td><br>        <td rowspan="2">高等数学（西105)</td><br>        <td rowspan="2">数据结构（西205）</td><br>        <td rowspan="2">离散数学（西206）</td><br>        <td rowspan="2">大学英语（至205）</td><br>    </tr><br>    <tr><br>        <td>第四节</td><br>    </tr><br>    <tr><br>        <td>第五节</td><br>        <td rowspan="2">数据结构（西203）</td><br>        <td rowspan="2">离散数学（西407）</td><br>        <td rowspan="2">大学体育</td><br>        <td></td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第六节</td><br>        <td></td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第七节</td><br>        <td rowspan="2">近代史（至305）</td><br>        <td rowspan="2">C++上机</td><br>        <td rowspan="2">大学英语（至205）</td><br>        <td></td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第八节</td><br>        <td></td><br>        <td></td><br>    </tr><br></table></p><a id="more"></a><ul><li><a href="https://github.com/ourfor/My-C-Learning" target="_blank" rel="noopener">My C Learning</a></li></ul><blockquote><p><strong><em>古今之成大事业、大学问者，必经过三种之境界：”昨夜西风凋碧树。独上高楼，望尽天涯路。”此第一境也。”衣带渐宽终不悔，为伊消得人憔悴。”此第二境也。”众里寻他千百度，蓦然回首，那人却在灯火阑珊处。”此第三境也。此等语皆非大词人不能道。然遽以此意解释诸词，恐为晏欧诸公所不许也。”<br>——王国维《人间词话》</em></strong></p></blockquote><p>@timeline{</p><h5 id="T"><a href="#T" class="headerlink" title="T.."></a>T..</h5><p>@item{</p><h6 id="第一境"><a href="#第一境" class="headerlink" title="第一境"></a>第一境</h6><p>昨夜西风凋碧树。独上高楼，望尽天涯路</p><p>}</p><p>@item{</p><h6 id="第二境"><a href="#第二境" class="headerlink" title="第二境"></a>第二境</h6><p>衣带渐宽终不悔，为伊消得人憔悴</p><p>}</p><p>@item{</p><h6 id="第三境"><a href="#第三境" class="headerlink" title="第三境"></a>第三境</h6><p>众里寻他千百度，蓦然回首，那人却在灯火阑珊处</p><p>}</p><h5 id="T-1"><a href="#T-1" class="headerlink" title="..T"></a>..T</h5><p>}</p><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'http://p5culcl8r.bkt.clouddn.com/%E5%AD%99%E8%AF%AD%E8%B5%9B,%E8%90%A7%E5%85%A8-%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF%E5%96%9C%E6%AC%A2.mp3',        poster: 'http://p5culcl8r.bkt.clouddn.com/%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF%E5%96%9C%E6%AC%A2.jpg',        name: '不仅仅是喜欢',        artist: '孙语赛,萧全'      },      {        src: 'http://ozkg680jm.bkt.clouddn.com/%E6%96%B0%E4%B9%90%E5%B0%98%E7%AC%A6-123%E6%88%91%E7%88%B1%E4%BD%A0.flac',        poster: 'http://ozkg680jm.bkt.clouddn.com/%E6%96%B0%E4%B9%90%E5%B0%98%E7%AC%A6.jpg',        name: '123我爱你',        artist: '新乐尘符'      },      {        src: 'http://ozkg680jm.bkt.clouddn.com/G.E.M.%20%E9%82%93%E7%B4%AB%E6%A3%8B-%E9%9B%A8%E8%9D%B6.mp3',        poster: 'http://ozkg680jm.bkt.clouddn.com/G.E.M..jpg',        name: '雨蝶',        artist: 'G.E.M. 邓紫棋'      }    ]  })</script>]]></content>
      
      <categories>
          
          <category> Accelerate </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Accelerate </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo+github/coding搭建个人博客</title>
      <link href="/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>常见的博客系统有简书、新浪博客等等然而这些大多是使用官方域名，博客样式也比较单一，优点是容易上手，不必太注重编辑语法，缺点是博客的样式比较单一，无法使用自己的域名，同时也就意味访问量注定不高，随着QQ空间、微信朋友圈的流行，人们对博客的浏览也越来越少，然而QQ空间、微信朋友圈大多以生活记录、趣事分享为主，虽然微信公众号经常会发布一些资讯、技术帖，然而微信客户端的限制注定无法满足人们的需要，仅仅从经验分享、交流而言。博客还是有存在的必要的。<br><a id="more"></a></p><h3 id="胡说八道"><a href="#胡说八道" class="headerlink" title="胡说八道"></a>胡说八道</h3><blockquote><p>我为什么搭建博客？为什么不是WordPress而是Hexo？   </p></blockquote><p>21世纪是信息时代，这年头谁没有个QQ空间、微信朋友圈，你又是否觉得微信朋友圈、QQ空间并不是一个想说什么就能说的地方，QQ空间随处可见的广告，朋友圈的矫情，当浅尝辄止成为思维定式，急功近利成为文化景象，喧嚣肤浅成为人们喜闻乐见的行为方式时，人们势必难以用心而行，无法静下心来。浮躁是这个时代的集体病症，生活中充斥着QQ空间、微信朋友圈的无病呻吟。是否还能有一个地方能个静下心来研究高深之学问，我想大概就只有博客了吧。你可以用博客来分享经验、记录。总之，在这里你说了算。搭建个人博客系统，无需购买云主机，避免WordPress的繁琐与臃肿，0基础上手，(未完待续)</p><table><thead><tr><th style="text-align:center">type</th><th style="text-align:center">advantages</th><th style="text-align:center">disadvantages</th></tr></thead><tbody><tr><td style="text-align:center">WordPress</td><td style="text-align:center">可以更加专注于写作，媒体资源可以储存在主机上</td><td style="text-align:center">需要主机、公网IP以及LNMP/LAMP环境，同时具备一定的建站基础</td></tr><tr><td style="text-align:center">Hexo</td><td style="text-align:center">无需主机（相对而言）以及公网IP同时提供二级域名，比较稳定</td><td style="text-align:center">使用MarkDown纯文本语法写作兼容HTML，媒体资源一般使用外链</td></tr></tbody></table><p>虽然你可以在路由器上面跑<code>WordPress</code>,前提是你对<em>Linux</em>比较熟悉同时有宽带运营商提供固定的公网IP，公网IP资源相对比较匮乏，直接购买比较昂贵，向宽带运营商索要是不错的选择。当然如果你经常使用<code>Shadowsocks</code>(酸酸乳)的话，直接搭载同一台主机上面就行了，这样不至于性能过剩。而Hexo搭建静态博客是使用了<code>Github</code>和<code>Coding</code>提供的<strong><em>Pages</em></strong>服务，这个是比较稳定的，<strong><em>Github</em></strong>作为全球最大的开源社区，安全性和稳定性肯定不用担心，我们使用的<em>Pages</em>服务仅仅是<a href="https://github.com/" target="_blank" rel="noopener">Github</a>的冰山一角而已，或许从搭建blog以后你就会感受到Github的魅力。   </p><h3 id="必备组件"><a href="#必备组件" class="headerlink" title="必备组件"></a>必备组件</h3><ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> </li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>   </li></ul><blockquote><p>Notice: 根据你使用的操作系统下载安装对于的版本即可，Linux和macOS可以通过命令行安装，对于macOS，安装包管理软件之后就可以通过源安装，对于新手不推荐使用这种方式，因为可能会用到root权限，这样以后生成、部署就比较麻烦。如果从来没有用过命令行，建议了解一下通配符。   </p></blockquote><h4 id="Linux下安装git和Node-js"><a href="#Linux下安装git和Node-js" class="headerlink" title="Linux下安装git和Node.js"></a>Linux下安装<code>git</code>和<code>Node.js</code></h4><p>通过下面命令安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update      <span class="comment">#检查更新</span></span><br><span class="line">sudo apt-get install git    <span class="comment">#安装Git</span></span><br><span class="line">sudo apt-get install nodejs    <span class="comment">#安装nodejs</span></span><br></pre></td></tr></table></figure></p><p>估计用<code>Linux</code>的用户应该看看官方的说明文档就会了。所以下面以<code>Windows</code>和<code>macOS</code>为例。其中macOS可以安装包管理软件来安装必须组件，例如MacPorts，Homebrew，Fink。     </p><h4 id="git、Node-js下载"><a href="#git、Node-js下载" class="headerlink" title="git、Node.js下载"></a>git、Node.js下载</h4><p>Windows、macOS通过下载安装包安装<br>下面链接均为64位系统长期支持版本。32位系统<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">点击这里</a>       </p><blockquote><p>Node.js</p><ul><li><a href="https://nodejs.org/dist/v8.10.0/node-v8.10.0.pkg" target="_blank" rel="noopener">macOS Installer (.pkg)</a></li><li><a href="https://nodejs.org/dist/v8.10.0/node-v8.10.0-x64.msi" target="_blank" rel="noopener">Windows Installer (.msi)</a> </li></ul></blockquote><blockquote><p>Git   </p><ul><li><a href="https://sourceforge.net/projects/git-osx-installer/files/git-2.16.2-intel-universal-mavericks.dmg/download?use_mirror=autoselect" target="_blank" rel="noopener">macOS</a></li><li><a href="https://github.com/git-for-windows/git/releases/download/v2.16.2.windows.1/Git-2.16.2-32-bit.exe" target="_blank" rel="noopener">Windows</a> </li></ul></blockquote><h4 id="macOS通过brew安装"><a href="#macOS通过brew安装" class="headerlink" title="macOS通过brew安装"></a>macOS通过brew安装</h4><p>macOS可以使用上面的方法下载安装包安装，而我更喜欢通过<code>brew</code>和<code>command line</code>安装，使用这种方法安装，你必须先安装包管理软件<code>brew</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><p>安装好<code>brew</code>后，键入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install git         <span class="comment">#安装git</span></span><br><span class="line">brew install nodejs      <span class="comment">#安装Node.js</span></span><br></pre></td></tr></table></figure></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g     <span class="comment">#安装Hexo</span></span><br><span class="line">hexo init blog              <span class="comment">#初始化博客</span></span><br><span class="line"><span class="built_in">cd</span> blog                     <span class="comment">#进入博客根目录</span></span><br><span class="line">npm install                 <span class="comment">#安装hexo到博客根目录</span></span><br></pre></td></tr></table></figure><p>(未完待续)</p>]]></content>
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VPS/树莓派实现云点播</title>
      <link href="/2018/03/01/VPS-%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E4%BA%91%E7%82%B9%E6%92%AD/"/>
      <url>/2018/03/01/VPS-%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E4%BA%91%E7%82%B9%E6%92%AD/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>本文将介绍如何使用下载工具<em>Xware</em>（迅雷远程下载）以及Emby来实现云点播，下载工具万万千千，为什么我们要用<em>Xware</em>？大家熟知的下载神器除了迅雷还有<em>Aria2</em>、<em>Transmission</em>；其实这些也是可以用的，只不过个人感觉<code>迅雷</code>下载快一点，同样对于媒体服务而言除了<em>Emby</em>还有<em>Plex</em>，只不过这个<code>Plex</code>安卓端播放是需要会员的，因此这里使用<code>Xware</code>和<code>Emby</code>如果你有个开发板或者VPS，接下来就开始折腾。<br><a id="more"></a>       </p><h2 id="Install-Xware"><a href="#Install-Xware" class="headerlink" title="Install Xware"></a>Install Xware</h2><p>安装<em>Xware</em>之前，我们需要安装<em>Docker</em>，而Docker只能安装在64位的电脑上面，这里我的VPS使用的是<code>CentOS6 x64</code>，输入以下命令安装：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh      <span class="comment">#安装Docker</span></span><br></pre></td></tr></table></figure><p>树莓派直接使用该命令<code>sudo apt-get install docker.io</code>安装<em>Docker</em>，安装好<code>Docker</code>之后，我们来下载<em>Xware</em>的镜像，这些镜像你可以在<a href="www.daocloud.io">DaoCloud</a>上面下载，对于VPS使用这个镜像<code>caiguai/docker-xware</code>树莓派使用这个<code>zxq1002/docker-thunder-xware</code>镜像  </p><h3 id="caiguai-docker-xware"><a href="#caiguai-docker-xware" class="headerlink" title="caiguai/docker-xware"></a>caiguai/docker-xware</h3><p>在终端中依次输入以下命令：     </p><p>拉取最新镜像：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull caiguai/docker-xware:latest</span><br></pre></td></tr></table></figure></p><p>创建一个下载目录. 用于挂载卷<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">        --name=xware \</span><br><span class="line">        --net=host \</span><br><span class="line">        -v $(<span class="built_in">pwd</span>)/data:/xware/TDDOWNLOAD \</span><br><span class="line">        caiguai/docker-xware</span><br></pre></td></tr></table></figure></p><p>查看日志(激活码)/到迅雷增加设备<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">docker logs xware</span><br><span class="line">```   </span><br><span class="line">```bash</span><br><span class="line">// output:</span><br><span class="line">killall: ETMDaemon: no process killed</span><br><span class="line">killall: EmbedThunderManager: no process killed</span><br><span class="line">killall: vod_httpserver: no process killed</span><br><span class="line">initing...</span><br><span class="line">try stopping xunlei service first...</span><br><span class="line">setting xunlei runtime env...</span><br><span class="line">port: 9000 is usable.</span><br><span class="line"></span><br><span class="line">YOUR CONTROL PORT IS: 9000</span><br><span class="line"></span><br><span class="line">starting xunlei service...</span><br><span class="line">Connecting to 127.0.0.1:9000 (127.0.0.1:9000)</span><br><span class="line">setting xunlei runtime env...</span><br><span class="line">port: 9000 is usable.</span><br><span class="line"></span><br><span class="line">YOUR CONTROL PORT IS: 9000</span><br><span class="line"></span><br><span class="line">starting xunlei service...</span><br><span class="line"></span><br><span class="line">getting xunlei service info...</span><br><span class="line"></span><br><span class="line">THE ACTIVE CODE IS: xxx                   //激活码</span><br><span class="line"></span><br><span class="line">go to http://yuancheng.xunlei.com, <span class="built_in">bind</span> your device with the active code.</span><br><span class="line">finished.</span><br></pre></td></tr></table></figure></p><p>打开网站<a href="http://yuancheng.xunlei.com" target="_blank" rel="noopener">迅雷远程下载</a>，输入激活码绑定就可以下载了。</p><h3 id="zxq1002-docker-thunder-xware"><a href="#zxq1002-docker-thunder-xware" class="headerlink" title="zxq1002/docker-thunder-xware"></a>zxq1002/docker-thunder-xware</h3><p>在终端中依次输入以下命令：     </p><p>拉取最新镜像：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull zxq1002/docker-thunder-xware:latest</span><br></pre></td></tr></table></figure></p><p>创建一个下载目录. 用于挂载卷<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">         --name=xware \</span><br><span class="line">         --net=host \</span><br><span class="line">         -v $(<span class="built_in">pwd</span>)/data:/app/TDDOWNLOAD \</span><br><span class="line">         zxq1002/docker-thunder-xware</span><br></pre></td></tr></table></figure></p><p>剩下的步骤和上面的一样。</p><h3 id="添加开机启动"><a href="#添加开机启动" class="headerlink" title="添加开机启动"></a>添加开机启动</h3><p>输入<code>docker ps</code>可以查看正在运行的容器，<code>docker ps -l</code>用于查看所有容器，输入命令查看<code></code>.<br>修改启动脚本<code>/etc/rc.local</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/rc.local</span><br></pre></td></tr></table></figure><p>按<code>i</code>进入编辑状态，在<code>exit 0</code>之前加上这一句<code>sudo docker start xxxxxxxx(Docker容器CONTAINER ID）</code>,之后按<code>Esc</code>进入命令输入状态输入<code>:wq</code>,注意<code>:</code>需要在英文状态下按住<code>Shift</code>输入。</p><p>迅雷远程下载官网的影视搜索里面有资源下载的网站，这里推荐一个下载动漫的网站：</p><ul><li><a href="share.dmhy.org">动漫花园</a></li></ul><h2 id="Install-Emby"><a href="#Install-Emby" class="headerlink" title="Install Emby"></a>Install Emby</h2><ul><li><a href="https://emby.media/" target="_blank" rel="noopener">Emby官网</a></li></ul><p><code>Emby服务端</code>在<a href="https://emby.media/linux-server.html" target="_blank" rel="noopener">https://emby.media/linux-server.html</a> </p><p><img src="http://ozkg680jm.bkt.clouddn.com/install%20Emby%20service.png" width="70%" height="30%"></p><p><em>右键</em>Download后面的安装包，选择复制<em>下载地址（链接）</em>，服务器安装<code>wget</code>下载工具，当然你也可以电脑下载好之后通过<em>ftp/scp</em>上传到VPS或者树莓派。这里树莓派选择<code>Armhf</code>架构的安装包。    </p><p>树莓派输入<code>sudo apt-get install wget</code>,VPS输入<code>yum install wget</code>安装<em>wget</em> </p><p>以树莓派为例，输入以下命令下载<code>Emby</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/MediaBrowser/Emby/releases/download/3.3.0.3/emby-server-deb_3.3.0.3_armhf.deb</span><br></pre></td></tr></table></figure></p><p>由于伟大的中国长城防火墙（GFW）de缘故，可能官网提供的下载地址下载没有速度，我这里上传到七牛云。版本均为<code>3.3.0.3</code></p><p>下面的<code>deb安装包</code>仅支持Debian系的（包括Ubuntu）系统，而Redhat系的（包括CentOS）则使用docker镜像，因为官网没有提供<code>rpm安装包</code></p><p>树莓派:<code>wget http://ozkg680jm.bkt.clouddn.com/emby-server-deb_3.3.0.3_armhf.deb</code><br>VPS:<code>wget http://ozkg680jm.bkt.clouddn.com/emby-server-deb_3.3.0.3_amd64.deb</code></p><p>由于下载的是安装包，安装时肯定存在依赖问题。VPS需要安装<code>dpkg</code>，<code>apt install dpkg</code></p><p>尝试安装：   </p><p>树莓派：<code>dpkg -i emby-server-deb_3.3.0.3_armhf.deb</code><br>Debian系VPS：<code>dpkg -i emby-server-deb_3.3.0.3_amd64.deb</code></p><p>如果安装失败，解决依赖问题：  </p><p>树莓派：<code>sudo apt-get install -f</code><br>Debian系VPS：<code>sudo apt-get install -f</code></p><p>修复依赖后再次安装就行来。  </p><p>Redhat系的（包括CentOS）：<br>拉取镜像：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull emby/embyserver:latest</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --volume /path/to/programdata:/config \ <span class="comment"># This is mandatory</span></span><br><span class="line">    --volume /path/to/share1:/mnt/share1 \ <span class="comment"># To mount a first share</span></span><br><span class="line">    --volume /path/to/share2:/mnt/share2 \ <span class="comment"># To mount a second share</span></span><br><span class="line">    --device /dev/dri/renderD128 \ <span class="comment"># To mount a render node for VAAPI</span></span><br><span class="line">    --publish 8096:8096 \ <span class="comment"># To expose the HTTP port</span></span><br><span class="line">    --publish 8920:8920 \ <span class="comment"># To expose the HTTPS port</span></span><br><span class="line">    --env UID=1000 \ <span class="comment"># The UID to run emby as (default: 2)</span></span><br><span class="line">    --env GID=100 \ <span class="comment"># The GID to run emby as (default 2)</span></span><br><span class="line">    --env GIDLIST=100 \ <span class="comment"># A comma-separated list of additional GIDs to run emby as (default: 2)</span></span><br><span class="line">    emby/embyserver:latest</span><br></pre></td></tr></table></figure><p>升级<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull emby/embyserver:latest</span><br></pre></td></tr></table></figure></p><p>当然你也可以使用第三方镜像</p><p>安装完毕后，打开<code>http://localhost:8096</code>,这里的<code>localhost</code>是ip地址，VPS填写公网IP，树莓派填写局域网IP。</p><div id="aplayer2" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer2"),narrow: false,autoplay: true,showlrc: 0,music: {title: "我的歌声里",author: "曲婉婷",url: "http://ozkg680jm.bkt.clouddn.com/%E6%9B%B2%E5%A9%89%E5%A9%B7-%E6%88%91%E7%9A%84%E6%AD%8C%E5%A3%B0%E9%87%8C.flac",pic: "http://ozkg680jm.bkt.clouddn.com/%E6%88%91%E7%9A%84%E6%AD%8C%E5%A3%B0%E9%87%8C.jpg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script>]]></content>
      
      <categories>
          
          <category> 云播 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xware </tag>
            
            <tag> Docker </tag>
            
            <tag> Emby </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VPS搭建Shadowsocks实现科学上网</title>
      <link href="/2018/02/22/VPS%E6%90%AD%E5%BB%BAShadowsocks%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>/2018/02/22/VPS%E6%90%AD%E5%BB%BAShadowsocks%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>最近很多免费的vpn软件都失效了，之前有用过蓝灯、FreeVPN之类的科学上网的软件，这类软件虽然免费，但是安全性较低、连接速度比较慢。油管视频基本看不了，有时还连接失败。好在最近亚马逊云（AWS）、谷歌云（Google Cloud）等虚拟主机厂商都推出了免费VPS的活动，如果你有信用卡你可以去AWS和Google Cloud上面去看看，AWS提供一年的免费云主机，Google Clou赠送的金额足够你的VPS跑半年，然而由于信用卡的缘故，这两个我都没用，想想也不现实天底下哪有这么大免费午餐，不然别人还不得亏死，还是老老实实买个VPS吧，推荐搬瓦工和Vultr他家的VPS，这两家现在都支持支付宝付款，并且都比较便宜。<br><a id="more"></a>  </p><h2 id="选购云主机（VPS）"><a href="#选购云主机（VPS）" class="headerlink" title="选购云主机（VPS）"></a>选购云主机（VPS）</h2><ul><li><a href="https://bandwagonhost.com/" target="_blank" rel="noopener">搬瓦工</a></li><li><a href="https://www.vultr.com/?ref=7332767" target="_blank" rel="noopener">Vultr</a><br>目前<code>搬瓦工</code>最低的套餐-<code>$19.9/年 10G VPS</code>已经售坠了，<code>Vultr</code>最低套餐为<code>$2.50/月</code>目前还有，通过我的邀请码注册<code>Vultr</code>应该会额外赠送$3,<a href="https://www.vultr.com/?ref=7332767" target="_blank" rel="noopener">Vultr</a>。如果你在搬瓦工上面购买VPS的话，它那里有KVM和OpenVZ两种类型的主机，选KVM，还是OpenVZ？这个问题对新手来说没有太大意义。一句话来说：想折腾的选KVM，想买便宜货的选OpenVZ，但从业界大趋势来看，建议购买虚拟化程度更高的KVM方案，而<code>Vultr</code>上面只有<code>KVM</code>类型的。 </li></ul><h3 id="OpenVZ的优势："><a href="#OpenVZ的优势：" class="headerlink" title="OpenVZ的优势："></a>OpenVZ的优势：</h3><ul><li>IPv6支持</li><li>更好的CPU性能</li></ul><h3 id="KVM的优势："><a href="#KVM的优势：" class="headerlink" title="KVM的优势："></a>KVM的优势：</h3><ul><li>完全虚拟化</li><li>自定义内核支持（BBR等）</li><li>Docker支持</li><li>更好的隔离</li><li>提高网络吞吐量</li></ul><p>（SSR加速可以使用BBR，迅雷远程下载等需要Docker）</p><p>都以最低配置进行比较：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">SSD</th><th style="text-align:center">ECC RAM</th><th style="text-align:center">带宽</th><th style="text-align:center">中央处理器</th><th style="text-align:center">价钱</th></tr></thead><tbody><tr><td style="text-align:center">Vultr</td><td style="text-align:center">20 GB固态硬盘</td><td style="text-align:center">512 MB</td><td style="text-align:center">500 GB</td><td style="text-align:center">1x Intel Xeon</td><td style="text-align:center">$2.50/月</td></tr><tr><td style="text-align:center">搬瓦工</td><td style="text-align:center">10 GB固态硬盘</td><td style="text-align:center">512 MB</td><td style="text-align:center">500 GB</td><td style="text-align:center">1x Intel Xeon</td><td style="text-align:center">$19.9/年</td></tr></tbody></table><p>其中<code>Vultr</code>是以每小时收费的，<code>搬瓦工</code>支持30天退款，</p><p><img src="http://ozkg680jm.bkt.clouddn.com/VPS%E6%90%AD%E5%BB%BAShadowsocks%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-1.png" width="70%" height="30%"></p><p>我是在<code>Vultr</code>上面的配置的主机，注册$10,关注官方<code>Twtter</code>获得<code>$3</code>。  </p><p><img src="https://www.vultr.com/media/banner_1.png" width="70%" height="30%">    </p><p>选一个你认为合适的厂商购买云主机，部署地点最好选择美国西海岸距离中国近的，这样延迟比较低，比如<code>洛杉矶</code>这些地方，系统最好选择<code>CentOS</code> 、<code>Ubuntu</code>这两种，<code>CentOS</code>最好选择<code>6</code>，因为<code>7</code>有防火墙需要额外设置。下面我以<code>Vultr</code>上面的<code>CentOS 6 x64</code>为例搭<code>Shadowsocks</code>.</p><h2 id="开始搭建SSR"><a href="#开始搭建SSR" class="headerlink" title="开始搭建SSR"></a>开始搭建SSR</h2><h3 id="ssh连接VPS"><a href="#ssh连接VPS" class="headerlink" title="ssh连接VPS"></a>ssh连接VPS</h3><ul><li>Windows下使用<code>xshell</code>或者<code>putty</code>来连接</li><li>Linux和macOS下直接在终端连接，用法：<code>ssh root@ip_address</code>其中<code>root</code>是用户名，一般是<code>root</code>,端口不更改就是<code>22</code>,<code>ip_address</code>是主机的<code>外网ip</code></li></ul><p>首先，更改<code>root</code>密码，ssh连接主机后输入以下命令：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p>改好密码后下载<code>doub.io</code>的一键安装脚本，键入以下指令即可，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><p>它会下载<code>ssr.sh</code>这个一键安装脚本，按照提示输入即可，之后如果你想查看用户信息，直接输入<code>bash ssr.sh</code>如果提示没有权限<code>chmod +x ssr.sh</code>加上运行权限就行了，你填写好参数后会在屏幕上面打印出<code>ss</code>和<code>ssr</code>链接地址。  </p><h3 id="SSR客户端下载"><a href="#SSR客户端下载" class="headerlink" title="SSR客户端下载"></a>SSR客户端下载</h3><p>无法到官网下载<code>Shadowsocks</code>(被墙)，可以去<code>github</code>上面下载。  </p><p>客户端下载：</p><ul><li><a href="http://ozkg680jm.bkt.clouddn.com/ssr-win.zip" target="_blank" rel="noopener">Windows</a></li><li><a href="http://ozkg680jm.bkt.clouddn.com/ssr-android.apk" target="_blank" rel="noopener">Android</a></li><li><a href="http://ozkg680jm.bkt.clouddn.com/ssr-mac.dmg" target="_blank" rel="noopener">macOS</a></li><li>IOS 需要在<code>App Store</code>购买<code>Potatso</code>或者<code>Shadowrocket</code>或者<code>Surge</code></li></ul><p>将之前的<code>ss</code>或者<code>ssr</code>地址复制，打开<code>shadowsocks</code>，点击<code>添加</code>选择<code>从剪粘板导入</code>即可。    </p><h3 id="免费SSR分享"><a href="#免费SSR分享" class="headerlink" title="免费SSR分享"></a>免费SSR分享</h3><p>当然也不是每个人都需要经常用到<code>google</code>,尽管<code>百度</code>在做<code>外卖</code>，<code>google</code>在做<code>AI</code>,抛开<code>安全性</code>和<code>稳定性</code>不提,免费的<code>SSR</code>还是有很多人分享的，只不过速度没有那么快罢了。</p><ul><li><del><a href="https://www.letsgofree.net（需要注册，且每个月只有2G）" target="_blank" rel="noopener">https://www.letsgofree.net（需要注册，且每个月只有2G）</a></del></li><li><del><a href="https://doub.bid/sszhfx/" target="_blank" rel="noopener">https://doub.bid/sszhfx/</a></del></li></ul><div id="aplayer3" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer3"),narrow: false,autoplay: true,showlrc: 0,music: {title: "没离开过",author: "张韶涵",url: "http://ozkg680jm.bkt.clouddn.com/%E5%BC%A0%E9%9F%B6%E6%B6%B5-%E6%B2%A1%E7%A6%BB%E5%BC%80%E8%BF%87.flac",pic: "https://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike272%2C5%2C5%2C272%2C90/sign=6ed5142a95510fb36c147fc5b85aa3f0/8326cffc1e178a8231192533fd03738da977e878.jpg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script>]]></content>
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown插入视频音频</title>
      <link href="/2018/02/20/Markdown%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/"/>
      <url>/2018/02/20/Markdown%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>对于部署在代码托管网站上面的静态博客，我们使用Markdown语法编辑文章，对于插入图片、视频和音频，我们不能安装WordPress或者Office办公套件里面那套来，因为这个Markdown写的文章是纯文本的，同样我们也不能把图片、视频音频这些文件放在Github、Coding等代码托管网站（因为容量太小了），所以我们可以利用各大音乐、视频网站的外链播放器，当然有些歌曲视频由于版权问题无法生成外链，我们可以将视频、音频的源文件放在七牛云这类网站的对象存储中，生成外链来播放。<br><a id="more"></a>   </p><h2 id="利用网易云音乐"><a href="#利用网易云音乐" class="headerlink" title="利用网易云音乐"></a>利用网易云音乐</h2><p><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>中选一首你喜欢的歌，点击生产外链播放器，比如我选的这首李玉刚-刚好遇见你，看了下网址：<a href="https://music.163.com/#/song?id=439915614" target="_blank" rel="noopener">https://music.163.com/#/song?id=439915614</a> ，以及生成的外链播放器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe <span class="built_in">type</span>=<span class="string">"music"</span> frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=330 height=86 src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=439915614&amp;auto=1&amp;height=66"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>每首歌的区别在于这个<code>id</code>,有些歌曲当你点击生成外链播放器时它提示<code>由于版权保护，无法生成外链。</code>这时候你就可以替换这个<code>id</code>来打破这个限制。    </p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=440241144&auto=1&height=66"></iframe>  <h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>Audio： <a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a><br>Video： <a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a></p><p>进入博客根目录，打开Terminal或者cmd，使用npm安装：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br><span class="line">npm install hexo-tag-dplayer</span><br></pre></td></tr></table></figure><h3 id="Audio"><a href="#Audio" class="headerlink" title="Audio"></a>Audio</h3><p>根据github项目的说明用法是将下面的代码粘贴到博客文章中你想出现音乐播放器的地方。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><p>说明：    </p><ul><li><code>title</code> : music title</li><li><code>author</code>: music author</li><li><code>url</code>: music file url</li><li><code>picture_url</code>: optional, music picture url</li><li><code>narrow</code>: optional, narrow style</li><li><code>autoplay</code>: optional, autoplay music, not supported by mobile browsers</li><li><code>width:xxx</code>: optional, prefix width:, player’s width (default: 100%)</li><li><code>lrc:xxx:</code> optional, prefix lrc:, LRC file url      </li></ul><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: false,showlrc: 0,music: {title: "Lovey-Dovey",author: "T-ara",url: "http://ozkg680jm.bkt.clouddn.com/T-ara-Lovey-Dovey.flac",pic: "http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script>   <h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>方法和Audio的一样也是粘贴在博客文章中。格式用法：     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer key=value ... %&#125;</span><br></pre></td></tr></table></figure><p>github项目上介绍的：<br>key can be    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dplayer options:</span><br><span class="line">    <span class="string">'autoplay'</span>, <span class="string">'loop'</span>, <span class="string">'screenshot'</span>, <span class="string">'hotkey'</span>, <span class="string">'mutex'</span>, <span class="string">'dmunlimited'</span> : bool options, use <span class="string">"yes"</span> <span class="string">"y"</span> <span class="string">"true"</span> <span class="string">"1"</span> <span class="string">"on"</span> or just without value to <span class="built_in">enable</span></span><br><span class="line">    <span class="string">'preload'</span>, <span class="string">'theme'</span>, <span class="string">'lang'</span>, <span class="string">'logo'</span>, <span class="string">'url'</span>, <span class="string">'pic'</span>, <span class="string">'thumbnails'</span>, <span class="string">'vidtype'</span>, <span class="string">'suburl'</span>, <span class="string">'subtype'</span>, <span class="string">'subbottom'</span>, <span class="string">'subcolor'</span>, <span class="string">'subcolor'</span>, <span class="string">'id'</span>, <span class="string">'api'</span>, <span class="string">'token'</span>, <span class="string">'addition'</span>, <span class="string">'dmuser'</span> : string arguments</span><br><span class="line">    <span class="string">'volume'</span>, <span class="string">'maximum'</span> : number arguments</span><br><span class="line">container options:</span><br><span class="line">    <span class="string">'width'</span>, <span class="string">'height'</span> : string, used <span class="keyword">in</span> container element style</span><br><span class="line">other:</span><br><span class="line">    <span class="string">'code'</span> : value of this key will be append to script tag</span><br></pre></td></tr></table></figure><p>以及例子： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">"url=http://devtest.qiniudn.com/若能绽放光芒.mp4"</span> <span class="string">"addition=https://dplayer.daoapp.io/bilibili?aid=4157142"</span> <span class="string">"api=http://dplayer.daoapp.io"</span> <span class="string">"pic=http://devtest.qiniudn.com/若能绽放光芒.png"</span> <span class="string">"id=9E2E3368B56CDBB4"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"token=tokendemo"</span> %&#125;</span><br><span class="line">&#123;% dplayer <span class="string">"url=http://devtest.qiniudn.com/若能绽放光芒.mp4"</span> <span class="string">"addition=https://dplayer.daoapp.io/bilibili?aid=4157142"</span> <span class="string">"api=http://dplayer.donot.help/dplayerpy"</span> <span class="string">"pic=http://devtest.qiniudn.com/若能绽放光芒.png"</span> <span class="string">"id=2622668"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"width=233px"</span> %&#125;</span><br><span class="line">&#123;% dplayer <span class="string">'url=some.mp4'</span> <span class="string">"id=someid"</span> <span class="string">"api=https://api.prprpr.me/dplayer/"</span> <span class="string">"addition=/some.json"</span> <span class="string">'code=player.on("loadstart",function()&#123;console.log("loadstart")&#125;)'</span> <span class="string">"autoplay"</span> %&#125;</span><br></pre></td></tr></table></figure><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"http://ozkg680jm.bkt.clouddn.com/T-ara%20-%20TIAMO.mp4","pic":"http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>   <div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"autoplay":true,"theme":"#FADFA3","loop":true,"video":{"url":"http://ozkg680jm.bkt.clouddn.com/T-ara%20-%20%E1%84%8B%E1%85%AA%E1%86%AB%E1%84%8C%E1%85%A5%E1%86%AB%20%E1%84%86%E1%85%B5%E1%84%8E%E1%85%A7%E1%86%BB%E1%84%82%E1%85%A6%20%28So%20Crazy%29.mp4","pic":"http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>树莓派系统整理</title>
      <link href="/2018/02/07/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E6%95%B4%E7%90%86/"/>
      <url>/2018/02/07/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Raspberry Pi是一款针对电脑业余爱好者、教师、小学生以及小型企业等用户的迷你电脑，预装Linux系统，体积仅信用卡大小，搭载ARM架构处理器，运算性能和智能手机相仿。<br>在接口方面，Raspberry Pi提供了可供键鼠使用的USB接口，此外还有快速以太网接口、SD卡扩展接口以及1个HDMI高清视频输出接口，可与显示器或者TV相连,目前树莓派的系统比较多大概分为<code>Linux</code>和<code>Android</code>两类（除了那个假的Windows10），可玩性比较高，下面整理了一下好用的系统。<br><a id="more"></a></p><table><thead><tr><th style="text-align:center">微型计算机</th><th>游戏机</th><th style="text-align:center">影音盒子</th><th>音响播放器</th><th style="text-align:center">路由器</th><th>NAS</th></tr></thead><tbody><tr><td style="text-align:center">Raspbian,Ubuntu MATE,Ubuntu Core,Windows 10 IoT Core,DietPi,Flint OS</td><td>Lakka,Recalbox</td><td style="text-align:center">OSMC,emteria.OS</td><td>Runeaudio</td><td style="text-align:center">LEDE,OpenWrt</td><td>openmediavault</td></tr></tbody></table><ul><li><a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">Raspbian</a></li><li><a href="https://ubuntu-mate.org/raspberry-pi/" target="_blank" rel="noopener">Ubuntu MATE</a></li><li><a href="https://developer.ubuntu.com/core/get-started/raspberry-pi-2-3" target="_blank" rel="noopener">Ubuntu Core</a></li><li><a href="https://developer.microsoft.com/en-us/windows/iot/getstarted" target="_blank" rel="noopener">Windows 10 IoT Core</a></li><li><a href="http://www.dietpi.com" target="_blank" rel="noopener">DietPi</a>  </li><li><a href="https://flintos.com/" target="_blank" rel="noopener">Flint OS</a></li><li><a href="http://www.lakka.tv" target="_blank" rel="noopener">Lakka</a></li><li><a href="https://www.recalbox.com" target="_blank" rel="noopener">Recalbox</a></li><li><a href="https://osmc.tv" target="_blank" rel="noopener">OSMC</a></li><li><a href="https://emteria.com" target="_blank" rel="noopener">emteria.OS</a></li><li><a href="http://www.runeaudio.com" target="_blank" rel="noopener">Runeaudio</a></li><li><a href="http://www.openmediavault.org" target="_blank" rel="noopener">openmediavault</a></li><li><a href="https://openwrt.org" target="_blank" rel="noopener">OpenWrt</a>    </li></ul><p><a href="http://ozkg680jm.bkt.clouddn.com/T-ara-Lovey-Dovey.flac" target="_blank" rel="noopener">http://ozkg680jm.bkt.clouddn.com/T-ara-Lovey-Dovey.flac</a></p><div id="aplayer4" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer4"),narrow: false,autoplay: false,showlrc: 0,music: {title: "Lovey-Dovey",author: "T-ara",url: "http://ozkg680jm.bkt.clouddn.com/T-ara-Lovey-Dovey.flac",pic: "http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script>]]></content>
      
      
        <tags>
            
            <tag> RasPi </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>树莓派刷LEDE</title>
      <link href="/2018/01/23/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%B7LEDE/"/>
      <url>/2018/01/23/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%B7LEDE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>树莓派是一个卡片大小的微型电脑，价格在100~300以内，之前再小米商城看了看最新款的小米路由器和小米盒子（小米盒子和小米路由器确实不错）不过我手头有一个树莓派3B，最近闲来无事，就去OpenWrt上面看了看，好像还没有正式适配树莓派3B，不过它的衍生系统LEDE，于是乎就开始刷LEDE了。<br><a id="more"></a></p><h1 id="Raspberry-pi-3B刷LEDE"><a href="#Raspberry-pi-3B刷LEDE" class="headerlink" title="Raspberry pi 3B刷LEDE"></a>Raspberry pi 3B刷LEDE</h1><h2 id="下载最新开源镜像"><a href="#下载最新开源镜像" class="headerlink" title="下载最新开源镜像"></a>下载最新开源镜像</h2><h3 id="LEDE项目官网"><a href="#LEDE项目官网" class="headerlink" title="LEDE项目官网"></a>LEDE项目官网</h3><p><a href="https://lede-project.org/zh/start" target="_blank" rel="noopener">https://lede-project.org/zh/start</a><br>你可以下载源码自己编译，也可以下载编译好的固件。LEDE也是有不少优点的：</p><ul><li>可扩展性</li><li>高安全性</li><li>高性能、高稳定性</li><li>强大的社区支持</li><li>开源/无额外支出<h3 id="支持的硬件"><a href="#支持的硬件" class="headerlink" title="支持的硬件"></a>支持的硬件</h3><a href="https://lede-project.org/toh/start" target="_blank" rel="noopener">https://lede-project.org/toh/start</a><br><img src="http://ozkg680jm.bkt.clouddn.com/Raspberry%20pi%203b%E5%88%B7LEDE-1.png" width="70%" height="30%"><br>目前小米路由器有三款可以刷LEDE，不过似乎没有必要，因为小米路由器的系统本身就是基于OpenWrt定制的，并且配合小米WIFI客户端使用体验还是非常棒的。树莓派目前所有的型号都支持LEDE，不过如果你真要用树莓派做路由器使用，建议你买几个USB网卡，不然这自带的无线网卡发射的信号可没那么强。    </li></ul><table><thead><tr><th style="text-align:center">0</th><th style="text-align:center">型号</th><th style="text-align:center">WiKi网址</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Xiaomi mini</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/xiaomi/mini" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/xiaomi/mini</a></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">Xiaomi   MiWiFi Nano</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/xiaomi/nano" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/xiaomi/nano</a></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">Xiaomi   MiWiFi 3G</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Raspberry Pi A</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">Raspberry Pi B</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">Raspberry Pi 3B</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">Raspberry Pi B+</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">Raspberry Pi 2B</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">Raspberry Pi Zero W</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr></tbody></table><p>LEDE支持的设备的固件都可以在这里下载：<a href="https://lede-project.org/toh/views/toh_fwdownload" target="_blank" rel="noopener">https://lede-project.org/toh/views/toh_fwdownload</a><br>由于我用的是树莓派3B，所以这里提供最新（20180123）的固件：<a href="https://downloads.lede-project.org/releases/17.01.4/targets/brcm2708/bcm2710/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img.gz" target="_blank" rel="noopener">https://downloads.lede-project.org/releases/17.01.4/targets/brcm2708/bcm2710/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img.gz</a><br>这个固件大小为8.5m，在macOS中双击打开会得到一个大小为297.8m后缀名为img的镜像文件；在Windows下面用RAR解压打开也是如此<br><img src="http://ozkg680jm.bkt.clouddn.com/Raspberry%20pi%203b%E5%88%B7LEDE-2.png" width="70%" height="30%"></p><h2 id="烧写镜像到SD卡"><a href="#烧写镜像到SD卡" class="headerlink" title="烧写镜像到SD卡"></a>烧写镜像到SD卡</h2><h3 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h3><p>Windows下面可以用诸如软碟通,Refuse等软件一键烧写，方法比较简单，这里就不详细介绍了。提供几个优质软件的官方网站：<br>Refuse（Windows，Ubuntu）：<a href="http://rufus.akeo.ie" target="_blank" rel="noopener">http://rufus.akeo.ie</a><br>Etcher（Windows，Linux，macOS）：<a href="https://etcher.io" target="_blank" rel="noopener">https://etcher.io</a></p><h3 id="Linux-macOS平台"><a href="#Linux-macOS平台" class="headerlink" title="Linux,macOS平台"></a>Linux,macOS平台</h3><h4 id="dd命令烧写镜像"><a href="#dd命令烧写镜像" class="headerlink" title="dd命令烧写镜像"></a>dd命令烧写镜像</h4><p>在Linux/macOS中打开Terminal（终端），下面以macOS为例，在Dock中找到启动台-其他-终端。<br>步骤：1,卸载SD卡<br>     2,烧写镜像<br>在终端中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil list  <span class="comment">#列出当前系统挂载的存储设备</span></span><br></pre></td></tr></table></figure><p><img src="http://ozkg680jm.bkt.clouddn.com/Raspberry%20pi%203b%E5%88%B7LEDE-3.png" width="70%" height="30%"><br>卸载SD卡的所有分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil unmountDisk diskx   <span class="comment">#diskx是系统挂载SD卡的路径</span></span><br></pre></td></tr></table></figure><p>烧写镜像，任何情况下你都可以将文件直接拖到Terminal中，Terminal将会输出文件的绝对路径 ，例如我将文件放在桌面，将它拖进终端，那么它显示的路径就会是       </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/zip/Desktop/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img</span><br></pre></td></tr></table></figure><p>dd命令用法：Ubuntu和macOS中在更改系统设置时要加sudo，回车后需要输入用户密码，这样即使没有超级用户的权限，你也可以执行一些或者全部的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd <span class="keyword">if</span>=&lt;...&gt; of=&lt;...&gt; bs=1m</span><br></pre></td></tr></table></figure><ul><li>if（input file）=输入文件、设备的绝对路径；</li><li>of（output file）=输出文件、设备的绝对路径；</li><li>bs（block size）=1m 一个操作周期的大小；</li></ul><p>我输入的命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd <span class="keyword">if</span>=/Users/zip/Desktop/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img of=/dev/disk4 bs=1m</span><br></pre></td></tr></table></figure><p><img src="http://ozkg680jm.bkt.clouddn.com/Raspberry%20pi%203b%E5%88%B7LEDE-4.png" width="70%" height="30%"><br>回车输入管理员密码，回车确认就开始烧写，在烧写过程中系统不会有任何提示。<br><img src="http://ozkg680jm.bkt.clouddn.com/Raspberry%20pi%203b%E5%88%B7LEDE-5.png" width="70%" height="30%"><br>看到上面提示说明烧写完成了。</p><h2 id="使用开源软件Etcher"><a href="#使用开源软件Etcher" class="headerlink" title="使用开源软件Etcher"></a>使用开源软件Etcher</h2><p>如果你觉得上面的命令比较麻烦，这里倒是有一些软件可以帮你一键刷写磁盘镜像，优点就是简洁、安全、美观和快捷，缺点就是效率比较低，而且只能烧写整个磁盘。<br>Etcher官网：<a href="https://etcher.io" target="_blank" rel="noopener">https://etcher.io</a><br>Etcher支持主流PC平台<br><img src="http://ozkg680jm.bkt.clouddn.com/Etcher.png" width="70%" height="30%"><br>左边选择镜像，右边点击就可以烧写镜像了。</p><h2 id="设置树莓派"><a href="#设置树莓派" class="headerlink" title="设置树莓派"></a>设置树莓派</h2><p>由于LEDE默认不开启WiFi，这时候我们可以用网线将树莓派和电脑连接。</p><ul><li>step1<br>确保电脑与树莓派通过网线连接好，打开<code>浏览器</code>在地址栏输入<code>192.168.1.1</code>进入路由器的web管理界面，默认root用户是没有密码的，直接登录，登录后会要求你设置密码，等你设置完密码后，你就可以通过ssh登录树莓派了。</li><li>step2<br>打开WiFi</li><li>step3<br>安装中文语言包</li></ul><h2 id="关于树莓派（Raspberry-pi）"><a href="#关于树莓派（Raspberry-pi）" class="headerlink" title="关于树莓派（Raspberry pi）"></a>关于树莓派（Raspberry pi）</h2><p>Raspberry Pi是一款针对电脑业余爱好者、教师、小学生以及小型企业等用户的迷你电脑，预装Linux系统，体积仅信用卡大小，搭载ARM架构处理器，运算性能和智能手机相仿。<br>在接口方面，Raspberry Pi提供了可供键鼠使用的USB接口，此外还有快速以太网接口、SD卡扩展接口以及1个HDMI高清视频输出接口，可与显示器或者TV相连</p><p>我的是Raspberry 3b。<br><img src="http://ozkg680jm.bkt.clouddn.com/%E6%A0%91%E8%8E%93%E6%B4%BE1.jpg" width="70%" height="30%"><br><img src="http://ozkg680jm.bkt.clouddn.com/%E6%A0%91%E8%8E%93%E6%B4%BE2.jpg" width="70%" height="30%"><br><img src="http://ozkg680jm.bkt.clouddn.com/%E6%A0%91%E8%8E%93%E6%B4%BE3.jpg" width="70%" height="30%"></p><h2 id="关于OpenWrt"><a href="#关于OpenWrt" class="headerlink" title="关于OpenWrt"></a>关于OpenWrt</h2><p>鉴于开源软件在国内的发展态势，目前国内有基于OpenWRT改进而来的OpenWRT-DreamBox。<br>开发Dreambox的lintel之后开发了基于Barrier Breaker的PandoraBox。<br>这个版本的OpenWRT集成了很多常用功能（包括脱机下载等），使用了改进过的较为稳定的硬件驱动，通过这个版本的OpenWRT可以把路由器的功能发挥得淋漓尽致，同时也保证路由器的稳定运行。</p><h2 id="更多系统支持"><a href="#更多系统支持" class="headerlink" title="更多系统支持"></a>更多系统支持</h2><p>树莓派除了可以当路由器来用，还可以当盒子（影音中心）、计算机来用<br>官网也提供了不少系统下载<br>Raspberry pi官网：<a href="https://www.raspberrypi.org" target="_blank" rel="noopener">https://www.raspberrypi.org</a></p>]]></content>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>个性化clover启动项</title>
      <link href="/2018/01/13/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9/"/>
      <url>/2018/01/13/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>clover启动时会有一些启动项，有些我们不常用，可以编辑clover的配置文件<code>config.plist</code>（/ESP/EFI/CLOVER/config.plist）来隐藏，可能你想个性化这些启动项的名称和图标，或者默认启动哪个Volumes，期待这篇文章对你有所帮助。<br><a id="more"></a><br>  首先用<code>clover configurator</code>或者diskutil挂载ESP引导分区，同时用这个<code>clover configurator</code>打开/ESP/EFI/CLOVER/config.plist  </p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-clover%20configurator.png" width="70%" height="30%"></p><p>打开就行了，在工具的左边，找到<code>boot</code>选项卡，其中<code>Default boot volume</code>是默认启动分区，你可以填写分区的名称或者其他的类似<code>LastBootedVolume</code>（这些在clover的帮助文档中找到）<br>勾选<code>NoearlyProgress</code>可以关机clover的欢迎界面  </p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-boot%20volume.png" width="70%" height="30%"></p><p>在左边的<code>GUI</code>选项卡中，<code>Hide Volume</code>中填写你想隐藏的启动项；<br><img src="http://ozkg680jm.bkt.clouddn.com/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-hide%20volume.png" width="70%" height="30%"><br>在<code>Custom Entries</code>中添加：<br><img src="http://ozkg680jm.bkt.clouddn.com/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-macOS.png" width="70%" height="30%"><br>其中macOs中只要在<code>Volume</code>中选择macOS安装分区，类型选择OS X就行，而Windows和Ubuntu则不同，<code>Volume</code>中选择Esp分区，<code>Path</code>中填写启动项的绝对路径，类型选择对应的Windows和Ubuntu。<br><img src="http://ozkg680jm.bkt.clouddn.com/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-ubuntu.png" width="70%" height="30%"><br><img src="http://ozkg680jm.bkt.clouddn.com/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-windows.png" width="70%" height="30%">    </p><p>勾选<code>Title</code>，填写的名称就是你想个性化的启动项的名称，<code>Image</code>中填写图标的绝对路径，如果不想个性化启动项图标可以不用管它，个性化教程大概就是这样，如果有疑问可以联系我。   </p><p>一首周二珂的告白气球：</p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=440241144&auto=1&height=66"></iframe>  ]]></content>
      
      <categories>
          
          <category> clover </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clover </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开启hidpi</title>
      <link href="/2018/01/01/%E5%BC%80%E5%90%AFhidpi/"/>
      <url>/2018/01/01/%E5%BC%80%E5%90%AFhidpi/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>当你顺利安装好黑果之后是否感觉系统字体太小，而当你更改更低的分辨率是又无法忍受字体发虚、界面模糊。开启hidpi能够让你在使用低分辨率的同时能够享受高清。<br><a id="more"></a></p><h2 id="获取两个重要参数"><a href="#获取两个重要参数" class="headerlink" title="获取两个重要参数"></a>获取两个重要参数</h2><h3 id="获取DisplayVendorID和DisplayProductID"><a href="#获取DisplayVendorID和DisplayProductID" class="headerlink" title="获取DisplayVendorID和DisplayProductID"></a>获取DisplayVendorID和DisplayProductID</h3><p>在Terminal中键入这两条命令：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ioreg -l|grep <span class="string">"DisplayVendorID"</span></span><br><span class="line">ioreg -l|grep <span class="string">"DisplayProductID"</span></span><br></pre></td></tr></table></figure><p><img src="http://ozkg680jm.bkt.clouddn.com/%E5%BC%80%E5%90%AFHidpi-2.png" width="70%" height="30%"></p><p>此时屏幕上会输出两个十进制数，如图，我得到的两个十进制数分别是：<code>2533</code>和<code>1719</code><br>接下来就是将这两个十进制数转化为十六进制数，我们可以使用计算器来转化，打开<code>启动台</code>-<code>计算器</code><br>点击<code>显示</code>-<code>编程型</code><br><img src="http://ozkg680jm.bkt.clouddn.com/%E5%BC%80%E5%90%AFHidpi-1.png" width="70%" height="30%"><br>分别刚才获取的两个<code>ID</code>输入,然后点击16，就转化为十六进制了。  </p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E5%BC%80%E5%90%AFHidpi-3.png" width="70%" height="30%"><br><img src="http://ozkg680jm.bkt.clouddn.com/%E5%BC%80%E5%90%AFHidpi-4.png" width="70%" height="30%"><br>记住这两个16进制数。接下来需要用到。</p><h2 id="生成配置显示器文件"><a href="#生成配置显示器文件" class="headerlink" title="生成配置显示器文件"></a>生成配置显示器文件</h2><p>在<code>Terminal</code>中键入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Desktop</span><br><span class="line">mkdir DisplayVendorID-xxxx    //其中“xxxx”是DisplayVendorID的16进制值小写</span><br><span class="line"><span class="built_in">cd</span> DisplayVendorID-xxxx        //进入DisplayVendorID-xxxx目录</span><br><span class="line">touch DisplayProductID-xxxx     //其中“xxxx”是DisplayProductID的16进制值小写</span><br><span class="line">open .                          //Finder中打开</span><br></pre></td></tr></table></figure></p><h3 id="添加分辨率"><a href="#添加分辨率" class="headerlink" title="添加分辨率"></a>添加分辨率</h3><p>在线生成配置文件，添加分辨率，<a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">在线网址</a></p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E5%BC%80%E5%90%AFHidpi-5.png" width="70%" height="30%">   </p><p>在右边填写配置信息，左边会生成相应的代码。   </p><ul><li><code>DisplayProductName</code>:可随意填写</li><li><code>DisplayProductID</code>:之前获取的DisplayProductID的16进制数</li><li><code>DisplayVendorID</code>:之前获取的DisplayVendorID的16进制数</li><li><code>Scale Resolutions</code>:所有添加的分辨率</li><li><code>hidpi</code>:勾选即开启该分辨率的hidpi</li></ul><p>添加完毕后，复制左边的代码，编辑之前创建的没有后缀名的<code>DisplayProductID-xxxx</code>的文件（用文本编辑器打开即可）粘贴复制的代码保存，显示器的配置文件就配置好了，接下来只需要将这个文件夹<code>DisplayVendorID-xxxx</code>复制到<code>/System/Library/Displays/Contents/Resources/Overrides/</code>下面（需要输入管理员密码）。     </p><h3 id="打开hidpi"><a href="#打开hidpi" class="headerlink" title="打开hidpi"></a>打开hidpi</h3><p>在<code>Terminal</code>中键入以下命令开启Hidpi<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/com.apple.windowserver.plist DisplayResolutionEnabled -bool <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="使用RDM切换"><a href="#使用RDM切换" class="headerlink" title="使用RDM切换"></a>使用RDM切换</h2><p>github项目地址 <a href="https://github.com/avibrazil/RDM" target="_blank" rel="noopener">RDM</a><br>下载安装后，重启系统打开RDM就可以在状态栏切换分辨率了。</p>]]></content>
      
      
        <tags>
            
            <tag> hidpi </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>声卡AlC255</title>
      <link href="/2017/12/10/%E5%A3%B0%E5%8D%A1AlC255/"/>
      <url>/2017/12/10/%E5%A3%B0%E5%8D%A1AlC255/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>之前发了小米笔记本air的黑苹果安装教程的帖子，黑苹果总算是安装上去了，可是还有许多问题没有解决,不过无线网卡和蓝牙就不要想了，但是还是要解决上网和声音的问题，声卡驱动不了视频都播放不了，QQ接收一个消息屏幕都会闪一下，总之，体验不大好，经过2个多月的接触，学习，以及在大佬（黑果小兵）的帮助下终于解决了大部分目前一可以解决的问题：<br><a id="more"></a>  </p><ul><li>声卡仿冒：首先感谢大佬的耐心帮助，@黑果小兵 ，仿冒了声卡，编译了声卡驱动。要知道这活可不是一般人能仿冒的，声卡仿冒了，终于不用忍受万能声卡驱动带来的种种不足，例如不能自动切换耳机、耳机有电流声以及声音太小。声卡alc255仿冒成功，注入ID等于27时效果最好，声卡驱动好了以后，是真的好用啊！<br><img src="http://ozkg680jm.bkt.clouddn.com/%E8%BE%93%E5%85%A5.png" width="70%" height="30%"><br><img src="http://ozkg680jm.bkt.clouddn.com/%E8%BE%93%E5%85%A5.png" width="70%" height="30%"></li></ul><ul><li>亮度调节：群友的帮助和自己爬贴终于解决了亮度调节，可以插上外置鼠标或者键盘在偏好设置-键盘-快捷键-显示器里面设置快捷键，或者直接在偏好设置-显示器里面调节滑块改变亮度，感觉会省电一些吧，反正看起来舒服多了。<br><img src="http://ozkg680jm.bkt.clouddn.com/%E4%BA%AE%E5%BA%A6.png" width="70%" height="30%"></li></ul><p>解决了8个苹果和四叶草启动跑代码，并且隐藏了部分不必要的启动项。<br>核心显卡目前完美驱动，有线网卡内建好了，<br><img src="http://ozkg680jm.bkt.clouddn.com/%E7%B3%BB%E7%BB%9F.png" width="70%" height="30%"></p><p>好了感觉自己废话好多，别人都是开篇几张图后面全靠编，笔者我也忍不住放几张图出来<br><img src="http://ozkg680jm.bkt.clouddn.com/%E9%9F%B3%E9%A2%91.png" width="70%" height="30%"> </p><p>福利来了，最新修改的efi文件<br>下载<br><a href="https://pan.baidu.com/s/1i5L7dS5" target="_blank" rel="noopener">https://pan.baidu.com/s/1i5L7dS5</a></p><p>efi文件怎么替换就不用我多说了吧，尽管我之前也替换出错导致windows启动不了，也正是因为这个学到了不少东西。<br>最后附上大佬的博客：<br>  blog.daliansky.net<br>如果言论不当以及技术问题还请大佬指导</p>]]></content>
      
      
        <tags>
            
            <tag> alc255 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ESP分区</title>
      <link href="/2017/10/15/ESP%E5%88%86%E5%8C%BA/"/>
      <url>/2017/10/15/ESP%E5%88%86%E5%8C%BA/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>不少安装黑果的小白应该都遇到一个问题，在抹除磁盘时系统提示空间不足，这时候不少有经验的人会告诉你ESP分区的大小要大于200m，然而ESP分区到底是做什么用的呢？<br><a id="more"></a></p><h2 id="挂载并修改ESP分区"><a href="#挂载并修改ESP分区" class="headerlink" title="挂载并修改ESP分区"></a>挂载并修改ESP分区</h2><p>##挂载系统ESP分区</p><p>###写在前面：<br>众所周知，在绝大部分个人PC中预装的都是Windows系列的操作系统，苹果公司的个人电脑预装的是Mac OS，无论是哪种操作系统都有都有它们的系统分区，其中系统分区中包含保证系统正常运转的必要系统文件，因此一般情况下用户在系统分区中只拥有可读的权限，其实这样是为了防止用户误删文件导致系统崩溃，正常情况下我们没有必要动这些文件，那么什么是ESP分区，ESP分区究竟在开机到正常进入系统用户界面起着什么作用呢？  </p><p>###常见的系统启动方式：<br>以win7为分界线，在win7之前的绝大部分PC都是以传统引导，win7以后一般是uefi引导，究竟支持哪些引导，是由主板决定的，以下是根据uefi引导操作。</p><p>###windows系统下使用命令行挂载<br>首先使用Windows命令挂载ESP分区<br>Windows徽键＋r，在运行框里输入cmd，点击运行即可<br>在命令行中输入以下命令：    </p><pre><code>list disk  //列出当前设备挂载磁盘  select disk 0  //选中磁盘0，注意这里的磁盘是安装系统所在的硬盘  list partition //列出选中磁盘0下的分区  select partition n //n表示esp分区的数字代号  assign letter＝z  //为esp分区分配盘符标识z，这个字母可以根据自己的喜好  exit  //退出命令行  </code></pre><p>此时打开Windows的资源管理器，在我的电脑下面你就可以看见出现了一个z盘，就是我们的系统引导分区，此时你发现你无法用<br>Windows的资源管理器打开esp分区，因为这个分区是受系统保护的，接下来我们就要使用这个软件了explore++；<br>右键explore++，选择以管理员身份运行，这时候将优盘efi文件夹覆盖到系统的esp分区，并且跳过重复文件，接下来利用软件bootice给我们的四叶草添加启动引导，打开bootice，选择uefi，点击修改启动序列，在系统的esp分区中的clover的文件夹下面的CLOVERX64.efi（\EFI\CLOVER\CLOVERX64.efi），并将这个启动项上移到第一启动项，保存好之后，重新开机你就可以看见四叶草的启动界面了。<br><img src="http://img04.sogoucdn.com/app/a/100520146/2c6edb8f7ab62a46b5aa07e62ad14aaa" width="70%" height="30%">  </p>]]></content>
      
      <categories>
          
          <category> PC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 引导 </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hackintosh（2）</title>
      <link href="/2017/10/12/Hackintosh%EF%BC%882%EF%BC%89/"/>
      <url>/2017/10/12/Hackintosh%EF%BC%882%EF%BC%89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="黑苹果安装教程之开始安装"><a href="#黑苹果安装教程之开始安装" class="headerlink" title="黑苹果安装教程之开始安装"></a>黑苹果安装教程之开始安装</h2><h2 id="已经制作好的安装优盘"><a href="#已经制作好的安装优盘" class="headerlink" title="已经制作好的安装优盘"></a>已经制作好的安装优盘</h2><p>如果你按照之前的教程成功制作了黑苹果原版系统安装优盘，那么你会发现你进入Mac安装界面无法格式化Mac安装分区，如果没有制作好安装优盘，那么分区和调整系统esp引导分区依旧是很有必要的，这不仅有利于我们安装Mac，同时也为我们启动多系统提供了便利，相信有不少读者都安装了我们喜爱的Linux的发行版Ubuntu.<br><a id="more"></a></p><h2 id="Mac系统安装分区"><a href="#Mac系统安装分区" class="headerlink" title="Mac系统安装分区"></a>Mac系统安装分区</h2><p>关闭安全启动可以看看大佬的帖子<br>首先，我们要给mac系统分出一个安装盘，进入Windows10系统，打开文件管理，右键我的电脑，打开管理；<br><img src="http://img02.sogoucdn.com/app/a/100520146/95ff9fd401e906499548f90e6ca041c7" width="70%" height="30%"><br>单击磁盘工具，右键c盘，</p><p>选择压缩卷，我输入压缩空间量60G，你们可以自行调整;<br><img src="http://img04.sogoucdn.com/app/a/100520146/1c39d2f400c227cc9c14d2255873a6e6" width="70%" height="30%"><br>之后打开工具Paragon Hard Disk Manage，将压缩出来的分区格式转化为Apple HFS。软件下载地址：<br><a href="https://pan.baidu.com/s/1geYjoDd" title="下载地址" target="_blank" rel="noopener">https://pan.baidu.com/s/1geYjoDd](https://pan.baidu.com/s/1geYjoDd](https://pan.baidu.com/s/1geYjoDd</a><br><img src="http://img03.sogoucdn.com/app/a/100520146/b7b4fc939461deac70620c82deaeb8f6" width="70%" height="30%"><br><img src="http://img01.sogoucdn.com/app/a/100520146/e9f3b83f5f5c11b4a8cfdca0822a6408" width="70%" height="30%"><br>这样mac安装盘就分好了，接下来进入苹果安装界面，选择磁盘工具，将我们分好的苹果分区抹掉，格式我是选择APFS或者HFS，如果抹除不成功，一般是笔记本的esp分区太小了，应该要300m以上，如何扩大esp分区，可以看看论坛大佬的贴子，安装教程就到这里，不要忘了把系统的esp分区下的文件夹替换成我的efi文件夹里的，这样的话就不用每次进mac系统前借助优盘的四叶草引导跑代码了，如果不会替换，建议多爬爬贴，论坛里有教程￼￼￼，当然这只是安装好了，只是完成了三分之一，后续更新驱动安装和四叶草界面美化 </p><p>小米笔记本驱动下载：<br><a href="https://pan.baidu.com/s/1skAjk8d" target="_blank" rel="noopener">https://pan.baidu.com/s/1skAjk8d</a><br>这些驱动按照需要安装，安装调节分辨率的软件后在上面状态栏选择调节分辨率，亮度调节也是这样。<br><img src="http://img01.sogoucdn.com/app/a/100520146/4473dadc91a6c4aa4fb70e452f6203e9" width="70%" height="30%"></p><p>建议先搞一个pe，以防不测，其次如果要将，efi替换需要使用软件easyuefi为四叶草引导添加启动项，并把四叶草引导调为首选启动项，或者合拼efi分区</p><p>可以看看这些大佬的帖子：<br><a href="http://www.miui.com/thread-7419826-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-7419826-1-1.html</a><br><a href="http://www.miui.com/thread-7601066-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-7601066-1-1.html</a><br><a href="http://www.miui.com/thread-7574042-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-7574042-1-1.html</a><br>女帝镇楼：  </p><p><img src="http://img01.sogoucdn.com/app/a/100520146/d813b2df31168428eca4bb9d33be0066" wedth="70%" height="30%">  </p>]]></content>
      
      <categories>
          
          <category> PC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hackintosh（1）</title>
      <link href="/2017/10/10/Hackintosh%EF%BC%881%EF%BC%89/"/>
      <url>/2017/10/10/Hackintosh%EF%BC%881%EF%BC%89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>这笔记本还是可以的，目前论坛上还没有适配这款新出的笔记本的黑苹果安装教程，不过在我的不懈折腾下总算让我的小米笔记本吃上了黑苹果</p><ul><li><p>需要的工具包括：<strong><em>1</em></strong>.写盘工具  <strong><em>2</em></strong>.原版镜像</p></li><li><p>小米笔记本AIR i7 指纹版安装黑苹果10.13  </p><a id="more"></a>   </li></ul><h2 id="黑苹果安装教程之准备工作"><a href="#黑苹果安装教程之准备工作" class="headerlink" title="黑苹果安装教程之准备工作"></a>黑苹果安装教程之准备工作</h2><p>这款小米笔记本我是816买的，距离今天已经过去差不多两个月了，总体上这笔记本还是可以的，目前论坛上还没有适配这款新出的笔记本的黑苹果安装教程，不过在我的不懈折腾下总算让我的小米笔记本吃上了黑苹果，首先，我是小白，安装成功离不开miui论坛和黑苹果乐园大佬们的无偿帮助，为了让更多小白吃上黑苹果，特写下这篇教程，如有不足还请大佬指教，废话不多说首先放图。<br><img src="http://img02.sogoucdn.com/app/a/100520146/f3bcad69bb4f08ed11046ba2254679ea" width="70%" height="30%"><br><img src="http://img03.sogoucdn.com/app/a/100520146/3e7833c5ec09e961532ca2a6a8c7e811" width="70%" height="30%"><br><img src="http://img01.sogoucdn.com/app/a/100520146/f2134420c609a29d57d041c81fa6a311" width="70%" height="30%">  </p><p>首先是准备工作，下载必须的黑苹果安装镜像，下面是百度云盘的下载地址：<a href="http://pan.baidu.com/s/1kVwxCPL" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVwxCPL</a><br>这个镜像是自带四叶草引导的，下面这个工具是将镜像写入优盘的工具，下载地址是：<br><a href="http://pan.baidu.com/s/1crWkLw" target="_blank" rel="noopener">http://pan.baidu.com/s/1crWkLw</a></p><p>写在前面，安装黑苹果并不完美：<br><strong><em>1</em></strong>.内置intel无线网卡不可用，据说intel无线网卡无解，当然还是希望可以驱动的，不过你也可以用小米随身Wifi或者其他USB无线网卡，前提是要有mac驱动<br><strong><em>2</em></strong>.内置蓝牙不可用<br><strong><em>3</em></strong>.1080p字太小，论坛有开高清显示的教程，我是设置1280x720的，同时开启高清显示，感觉还不错。<br><img src="http://img03.sogoucdn.com/app/a/100520146/9f90200d61c59b5540d8ea6c228f2be9" width="70%" height="30%"><br>打开工具transmac，右键以管理员权限运行<br><img src="http://img01.sogoucdn.com/app/a/100520146/231bd7c6d86a7c92691181ee5dc7a969" width="70%" height="30%"><br>，如果Windows提示格式化优盘，直接忽略，完成后，右键优盘，选择restret for disk imge,镜像写入完成后，你可以重启笔记本，按F12选择优盘启动，可能要关闭安全启动，按住F2进入BIOS，需要设置一个密码才能关闭安全启动，如果可以选择优盘启动可以直接忽略此步骤，在四叶草引导界面选择Mac，接下来会跑代码，你只需要耐心等待，不一会就回进入安装界面，这时不要安装因为你还没有为苹果系统分出一个安装盘。<br><img src="http://ozkg680jm.bkt.clouddn.com/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E6%88%AA%E5%9B%BE%E6%A1%8C%E9%9D%A2.png" width="70%" height="30%"><br>准备工作就到这里，本帖持续更新</p><p>女帝镇楼：</p><p><img src="http://img04.sogoucdn.com/app/a/100520146/274e3a4ea2f54bb303360499a92dd737" wedth="30%" height="20%"></p><p>标签： hackintosh  </p>]]></content>
      
      <categories>
          
          <category> PC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Excel进阶教程</title>
      <link href="/2017/09/10/Excel%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/"/>
      <url>/2017/09/10/Excel%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>同一文件下如何合并相同类型的表格，相信大家对这个问题困惑了很久，如何如何合并这些表格呢？合并之后是否会得到我们想要的表格呢？<br>通常情况下我们如果要使用Excel来合并同一类型的表格，我们一般将每个表格文件打开剪切我们需要的单元格，并一一粘贴到目标表格中，你会发现其中有很多重复的步骤，特别是当表格文件数量相当多的时候，这工作量就很大了，既然重复相同的步骤是麻烦的根源，那么我们为何不把这项工作交给计算机做呢？其实微软公司出品的办公软件Excel中就有这个功能，不过要实现这个功能，我们就要用到“宏”这个东西，简单的说“宏”就是帮你完成重复的操作，如何打开，使用宏呢？<br><a id="more"></a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Sub 合并当前目录下所有工作簿的全部工作表()  </span><br><span class="line">Dim MyPath, MyName, AWbName  </span><br><span class="line">Dim Wb As Workbook, WbN As String  </span><br><span class="line">Dim G As Long</span><br><span class="line">Dim Num As Long  </span><br><span class="line">Dim BOX As String  </span><br><span class="line">Application.ScreenUpdating = False</span><br><span class="line">MyPath = ActiveWorkbook.Path</span><br><span class="line">MyName = Dir(MyPath &amp; <span class="string">"\" &amp; "</span>*.xls<span class="string">")</span></span><br><span class="line"><span class="string">AWbName = ActiveWorkbook.Name</span></span><br><span class="line"><span class="string">Num = 0</span></span><br><span class="line"><span class="string">Do While MyName &lt;&gt; "</span><span class="string">"</span></span><br><span class="line"><span class="string">If MyName &lt;&gt; AWbName Then</span></span><br><span class="line"><span class="string">Set Wb = Workbooks.Open(MyPath &amp; "</span>\<span class="string">" &amp; MyName)</span></span><br><span class="line"><span class="string">Num = Num + 1</span></span><br><span class="line"><span class="string">With Workbooks(1).ActiveSheet</span></span><br><span class="line"><span class="string">.Cells(.Range("</span>B65536<span class="string">").End(xlUp).Row + 2, 1) = Left(MyName, Len(MyName) - 4)</span></span><br><span class="line"><span class="string">For G = 1 To Sheets.Count</span></span><br><span class="line"><span class="string">Wb.Sheets(G).UsedRange.Copy .Cells(.Range("</span>B65536<span class="string">").End(xlUp).Row + 1, 1)</span></span><br><span class="line"><span class="string">Next</span></span><br><span class="line"><span class="string">WbN = WbN &amp; Chr(13) &amp; Wb.Name</span></span><br><span class="line"><span class="string">Wb.Close False</span></span><br><span class="line"><span class="string">End With</span></span><br><span class="line"><span class="string">End If</span></span><br><span class="line"><span class="string">MyName = Dir</span></span><br><span class="line"><span class="string">Loop</span></span><br><span class="line"><span class="string">Range("</span>B1<span class="string">").Select</span></span><br><span class="line"><span class="string">Application.ScreenUpdating = True</span></span><br><span class="line"><span class="string">MsgBox "</span>共合并了<span class="string">" &amp; Num &amp; "</span>个工作薄下的全部工作表。如下：<span class="string">" &amp; Chr(13) &amp; WbN, vbInformation, "</span>提示<span class="string">"</span></span><br><span class="line"><span class="string">End Sub</span></span><br></pre></td></tr></table></figure><p>首先复制代码，然后在文件夹中新建一个表格文件，然后使用Excel打开，在选项卡中找到宏并打开，选择工作的表格，查看代码<br><img src="http://ozkg680jm.bkt.clouddn.com/%E5%AE%8F%E6%9F%A5%E7%9C%8B%E4%BB%A3%E7%A0%81.png" width="70%" height="30%"><br>在文本框中粘贴复制的代码<br><img src="http://ozkg680jm.bkt.clouddn.com/%E7%B2%98%E8%B4%B4%E4%BB%A3%E7%A0%81.png" width="70%" height="30%"><br>关闭窗口，点击运行&gt;宏   </p><p><img src="http://ozkg680jm.bkt.clouddn.com/%E8%BF%90%E8%A1%8C.png" width="70%" height="30%"><br>一会儿就合并好了，但是这个表格并不符合我们的要求，这时善用排序功能，就行了。<br><img src="http://ozkg680jm.bkt.clouddn.com/%E5%88%9D%E9%9F%B3%E6%9C%AA%E6%9D%A5.jpg" width="70%" height="30%">      </p>]]></content>
      
      <categories>
          
          <category> APP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>读《红楼梦》有感</title>
      <link href="/2017/08/17/%E8%AF%BB%E3%80%8A%E7%BA%A2%E6%A5%BC%E6%A2%A6%E3%80%8B%E6%9C%89%E6%84%9F/"/>
      <url>/2017/08/17/%E8%AF%BB%E3%80%8A%E7%BA%A2%E6%A5%BC%E6%A2%A6%E3%80%8B%E6%9C%89%E6%84%9F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>红楼梦是中国古典小说，作者曹雪芹和高鹗，以贾宝玉和林黛玉的爱情故事以及封建四大家族贾、史、王、薛的兴衰为主线，初读红楼梦，有些难度，先不说情节如何，单是复杂的人物关系以及宏大的场景就会让你眼花缭乱，因此先不说读懂红楼梦，要想耐心的读完这部小说，你就必须掌握两张地图，首先是人物关系图，其次是贾府地图。<br><a id="more"></a></p><p>作为中国古代四大名著之首，红楼梦具有很高的文学底蕴，是中国古代小艺术的巅峰。作者在小说中利用谐音来暗示人物的结局。即“真事隐去，假语村言”的特殊笔法。作者在刻画人物形象是着重描写人物的心理人物的衣着外貌，服饰的描写反映了当时的社会背景，使得这部小说不但具有很高的文学价值，还具有考古价值。小说本身与作者的人生经历有些相似，作者曹雪芹出生于官宦世家，早年过着不愁吃穿的生活，后来曹家因亏空获罪被满门抄斩，曹雪芹移居北京，靠朋友救济和卖字画度日，正是这段经历使他具备了写《红楼梦》的文化基础和思想觉悟。小说中的贾宝玉本是一块补天的石头，被一个僧人和一个道士带到人间，开始了充满曲折的人生经历，读完这部小说可能你对林黛玉的结局心生怜悯，作者正是想通过这种悲惨的结局来表达对封建势力的批判，结合作者的人生经历很容易想到作者这样写的目的。</p><p>接下来是小说的主要内容，有人说《红楼梦》就是一个男人和一群女人的故事，其实也不尽然，《红楼梦》开篇介绍的背景就暗含人物结局，这里就不浪费过多笔墨，这些自有研究红学的人解决，我认为小说大致可以分为三个部分，毕竟我对贾宝玉和这群地位不同的少女的平静的大观园生活不感冒，我比较喜欢有起伏的情节，到了最后四大家族由盛转衰，物是人非，正如作者自我评价：“满纸荒唐言，一把辛酸泪！都云作者痴，谁解其中味”。其实就是写了一段爱情故事，一千个读者眼中有一千个哈姆雷特。开国领袖毛主席评价小说《红楼梦》：（中国过去）除了地大物博，人口众多，历史悠久，以及在文学上有部《红楼梦》等等以外，很多地方不如人家，骄傲不起来。《红楼梦》不仅要当做小说看，而且要当做历史看。他写的是很细致的、很精细的社会历史”，文学家鲁迅则表示：“《红楼梦》是中国许多人所知道，至少，是知道这名目的书。谁是作者和续者姑且勿论，单是命意，就因读者的眼光而有种种：经学家看见《易》，道学家看见淫，才子看见缠绵，革命家看见排满，流言家看见宫闱秘事”，《人间词话》作者王国维认为：“《红楼梦》，哲学的也，宇宙的也，文学的也。此《红楼梦》之所以大背于吾国人之精神，而其价值亦即存乎此”。大家们对《红楼梦》有极高评价。</p><p>当你厌倦了色彩纷繁的荧屏，想感受那一缕墨香陪伴，不妨捧起《红楼梦》细细品读。</p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=439915614&auto=1&height=66"></iframe>  ]]></content>
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
